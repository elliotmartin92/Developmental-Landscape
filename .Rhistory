12)+
expand_limits(y = c(-4, 2.5))
Figure3A2 = gene_violin(data_set_to_plot="Polysome_seq",
genes_by_GO="GO_term_selection",
GO_term="double-strand break repair",
gene_of_interest=NA,
normalization="each_gene",
12)+
expand_limits(y = c(-2, 3.5))
Fig3B = image_panel(path = "../Paper/Figures/placeholder.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("C", "C'", "C''"))
Fig3C = image_panel(path = "../Paper/Figures/placeholder.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"))
Figure3 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure3 = Figure3 %>%
fill_panel(Figure3A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure3A2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6) %>%
fill_panel(Fig3B, label = "", scaling = "none", panel_clip = "off", row = 6, column = 2:5) %>%
fill_panel(Fig3C, label = "", scaling = "none", panel_clip = "off", row = 7, column = 2:5)
Figure3
ggsave(filename = "Figure3.pdf", plot = Figure3, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
runApp()
runApp()
runApp()
renv::restore()
if (is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
setwd("ShinyExpresionMap")
}else if (strsplit(getwd(), "Developmental-Landscape")[[1]][2] == "/ShinyExpresionMap") {
warning("WD already set to /ShinyExpresionMap")
}else{
errorCondition("WD is invalid")
}
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("server_modules/ovary_map.R")
library(tidyverse)
library(heatmaply)
library(rgdal)
library(sf)
library(ggplot2)
library(plotly)
library(ggmap)
library(cowplot)
library(purrr)
library(tinytex)
library(quanteda)
library(ggpubr)
library(rstatix)
library(Cairo)
library(rlang)
here::i_am("Paper/figure_wrapper.R")
library(here)
install.packages("here")
here::i_am("Paper/figure_wrapper.R")
here::i_am("Paper/figure_wrapper.R")
library(here)
source(here("ShinyExpresionMap/server_modules/ggplotWhiteTheme.R"))
setwd(here())
source(here("Paper/Figures/Figure_1_assembly.R"))
source(here("Paper/Figures/Figure_2_assembly.R"))
source(here("Paper/Figures/Figure_3_assembly.R"))
source(here("Paper/Figures/Figure_4_assembly.R"))
source(here("Paper/Figures/Figure_1S_assembly.R"))
setwd(here())
source(here("Paper/Figures/Figure_1_assembly.R"))
install.packages("pdftools")
source(here("Paper/Figures/Figure_1_assembly.R"))
source(here("Paper/Figures/Figure_1_assembly.R"))
source(here("Paper/Figures/Figure_1_assembly.R"))
strsplit(getwd()
getwd()
(is.na(strsplit(getwd(), "Developmental-Landscape")
)
)
setwd(here())
is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])
if (is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
setwd("ShinyExpresionMap")
}else if (strsplit(getwd(), "Developmental-Landscape")[[1]][2]) {
}else{
errorCondition("WD is invalid")
}
setwd(here())
source(here("Paper/Figures/Figure_1_assembly.R"))
install.packages("ijtiff")
source(here("Paper/Figures/Figure_3_assembly.R"))
installed.packages("reticulate")
setwd(here())
source(here("Paper/Figures/Figure_1_assembly.R"))
install.packages("reticulate")
library(tidyverse)
library(heatmaply)
library(rgdal)
library(sf)
library(ggplot2)
library(plotly)
library(ggmap)
library(cowplot)
library(purrr)
library(tinytex)
library(quanteda)
library(ggpubr)
library(rstatix)
library(Cairo)
library(rlang)
here::i_am("Paper/figure_wrapper.R")
library(here)
source(here("ShinyExpresionMap/server_modules/ggplotWhiteTheme.R"))
setwd(here())
source(here("Paper/Figures/Figure_1_assembly.R"))
Y
conda_list()
conda_create("czi-metadata")
renv::use_python()
conda_list()
conda_remove("czi-metadata")
conda_create("czi-metadata")
conda_list()
library(reticulate)
conda_list()
Sys.setenv(RETICULATE_PYTHON = "D:/R_projects/Developmental-Landscape/renv/python/r-reticulate")
library(reticulate)
conda_list()
renv::use_python()
conda_remove("czi-metadata")
conda_list()
conda_create("czi-metadata")
conda_list()
conda_remove("czi-metadata")
conda_list()
use_condaenv("renv_python")
pip install aicsimageio
conda_install("aicsimageio" pip = TRUE)
conda_install("aicsimageio", pip = TRUE)
library(tidyverse)
library(heatmaply)
library(rgdal)
library(sf)
library(ggplot2)
library(plotly)
library(ggmap)
library(cowplot)
library(purrr)
library(tinytex)
library(quanteda)
library(ggpubr)
library(rstatix)
# library(Cairo)
library(rlang)
here::i_am("Paper/figure_wrapper.R")
library(here)
source(here("ShinyExpresionMap/server_modules/ggplotWhiteTheme.R"))
setwd(here())
source(here("Paper/Figures/Figure_1_assembly.R"))
conda_list()
conda_remove("aicsimageio")
use_condaenv("renv_python")
conda_install(envname = "renv-python", "aicsimageio" pip = TRUE)
conda_install(envname = "renv-python", "aicsimageio", pip = TRUE)
here::i_am("Paper/figure_wrapper.R")
library(here)
source(here("ShinyExpresionMap/server_modules/ggplotWhiteTheme.R"))
setwd(here())
source(here("Paper/Figures/Figure_1_assembly.R"))
source(here("Paper/Figures/Figure_2_assembly.R"))
source(here("Paper/Figures/Figure_3_assembly.R"))
source(here("Paper/Figures/Figure_3_assembly.R"))
source(here("Paper/Figures/Figure_4_assembly.R"))
source("server_modules/violin_genes.R")
setwd("ShinyExpresionMap/")
Figure4A1 = gene_violin(data_set_to_plot="Input_seq",
genes_by_GO="GO_term_selection",
GO_term="synaptonemal complex",
gene_of_interest=NA,
normalization="each_gene",
12)+
expand_limits(y = c(-4, 2.5))+
ggtitle("GO term: Synaptonemal Complex")+
theme(aspect.ratio = 0.2,
plot.title = element_text(size = 12, margin = margin(0,0,4,0)))
source("server_modules/violin_genes.R")
Figure4A1 = gene_violin(data_set_to_plot="Input_seq",
genes_by_GO="GO_term_selection",
GO_term="synaptonemal complex",
gene_of_interest=NA,
normalization="each_gene",
12)+
expand_limits(y = c(-4, 2.5))+
ggtitle("GO term: Synaptonemal Complex")+
theme(aspect.ratio = 0.2,
plot.title = element_text(size = 12, margin = margin(0,0,4,0)))
source("server_modules/violin_genes.R")
library(tidyverse)
source("server_modules/violin_genes.R")
Figure4A1 = gene_violin(data_set_to_plot="Input_seq",
genes_by_GO="GO_term_selection",
GO_term="synaptonemal complex",
gene_of_interest=NA,
normalization="each_gene",
12)+
expand_limits(y = c(-4, 2.5))+
ggtitle("GO term: Synaptonemal Complex")+
theme(aspect.ratio = 0.2,
plot.title = element_text(size = 12, margin = margin(0,0,4,0)))
Figure4A1
Fig4B = image_panel(path = "../Paper/Figures/",
path_to_czi = "../Paper/Figures/Figure_4/Image 2.czi",
colors_to_return = c("green", "red"),
genotype_annotation = "Ord::GFP",
green_annotation = "ord::GFP",
red_annotation = "ord::GFP mRNA",
label_letters = c("C", "C'", "C''"),
scale_bar_length = 20)
source("../Paper/Helper_functions/image_panel.R")
Fig4B = image_panel(path = "../Paper/Figures/",
path_to_czi = "../Paper/Figures/Figure_4/Image 2.czi",
colors_to_return = c("green", "red"),
genotype_annotation = "Ord::GFP",
green_annotation = "ord::GFP",
red_annotation = "ord::GFP mRNA",
label_letters = c("C", "C'", "C''"),
scale_bar_length = 20)
library(tidyverse)
library(heatmaply)
library(rgdal)
library(sf)
library(ggplot2)
library(plotly)
library(ggmap)
library(cowplot)
library(purrr)
library(tinytex)
library(quanteda)
library(ggpubr)
library(rstatix)
# library(Cairo)
library(rlang)
library(reticulate)
here::i_am("Paper/figure_wrapper.R")
library(here)
here()
# use_condaenv(here("renv/python/condaenvs/renv-python/"))
source(here("ShinyExpresionMap/server_modules/ggplotWhiteTheme.R"))
setwd(here())
source(here("Paper/Figures/Figure_1_assembly.R"))
source(here("Paper/Figures/Figure_2_assembly.R"))
source(here("Paper/Figures/Figure_3_assembly.R"))
source(here("Paper/Figures/Figure_4_assembly.R"))
source(here("Paper/Figures/Figure_1S_assembly.R"))
source(here("Paper/Figures/Figure_2S_assembly.R"))
source(here("Paper/Figures/Figure_3S_assembly.R"))
source(here("Paper/Figures/Figure_4S_assembly.R"))
setwd(here())
rmarkdown::render(here("Paper/Figures/figure_wrapper.rmd"),
output_dir = here("Paper/Figures/Compiled_panels/"),
output_file = paste0("Developmental_Landscape_compiled_figures", '_', Sys.Date(), '.pdf'))
if (is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
setwd("ShinyExpresionMap/")
}else if (!is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
}else{
errorCondition("WD is invalid")
}
Fig4B = image_panel(path = "../Paper/Figures/Figure_4/img2_24_RGB ps.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 2.czi",
colors_to_return = c("green", "red"),
genotype_annotation = "Ord::GFP",
green_annotation = "ord::GFP",
red_annotation = "ord::GFP mRNA",
label_letters = c("C", "C'", "C''"),
scale_bar_length = 20)
Fig4B
Fig4B = image_panel(path = "../Paper/Figures/Figure_4/img2_24_RGB ps.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 2.czi",
colors_to_return = c("green", "red"),
genotype_annotation = "Ord::GFP",
green_annotation = "Ord::GFP",
red_annotation = "\nord::GFP mRNA",
label_letters = c("C", "C'", "C''"),
scale_bar_length = 20)
Fig4B
Fig4B = image_panel(path = "../Paper/Figures/Figure_4/img2_24_RGB ps.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 2.czi",
colors_to_return = c("green", "red"),
genotype_annotation = "Ord::GFP",
green_annotation = "Ord::GFP",
red_annotation = "ord::GFP mRNA",
label_letters = c("C", "C'", "C''"),
scale_bar_length = 20)
Fig4B
Fig4B = image_panel(path = "../Paper/Figures/Figure_4/img2_24_RGB ps.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 2.czi",
colors_to_return = c("green", "red"),
genotype_annotation = "Ord::GFP",
green_annotation = "Ord::GFP",
red_annotation = "ord::GFP mRNA",
blue_annotation = "DAPI",
label_letters = c("C", "C'", "C''"),
scale_bar_length = 20)
Fig4B = image_panel(path = "../Paper/Figures/Figure_4/img2_24_RGB ps.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 2.czi",
colors_to_return = c("green", "red"),
genotype_annotation = "Ord::GFP",
green_annotation = "Ord::GFP",
red_annotation = "ord::GFP mRNA",
blue_annotation = "DAPI",
label_letters = c("C", "C'", "C''"),
scale_bar_length = 20)
Fig4B
library(tidyverse)
library(heatmaply)
library(rgdal)
library(sf)
library(ggplot2)
library(plotly)
library(ggmap)
library(cowplot)
library(purrr)
library(tinytex)
library(quanteda)
library(ggpubr)
library(rstatix)
# library(Cairo)
library(rlang)
library(reticulate)
here::i_am("Paper/figure_wrapper.R")
library(here)
here()
# use_condaenv(here("renv/python/condaenvs/renv-python/"))
source(here("ShinyExpresionMap/server_modules/ggplotWhiteTheme.R"))
setwd(here())
source(here("Paper/Figures/Figure_1_assembly.R"))
source(here("Paper/Figures/Figure_2_assembly.R"))
source(here("Paper/Figures/Figure_3_assembly.R"))
source(here("Paper/Figures/Figure_4_assembly.R"))
source(here("Paper/Figures/Figure_1S_assembly.R"))
source(here("Paper/Figures/Figure_2S_assembly.R"))
source(here("Paper/Figures/Figure_3S_assembly.R"))
source(here("Paper/Figures/Figure_4S_assembly.R"))
setwd(here())
rmarkdown::render(here("Paper/Figures/figure_wrapper.rmd"),
output_dir = here("Paper/Figures/Compiled_panels/"),
output_file = paste0("Developmental_Landscape_compiled_figures", '_', Sys.Date(), '.pdf'))
Figure4
Figure4 = Figure4 %>%
fill_panel(Figure4A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure4A2, label = "B", scaling = "fit", panel_clip = "on", row = 5:6, column = 3:6) %>%
fill_panel(Figure4B, label = "", scaling = "none", panel_clip = "off", row = 8, column = 2:5) %>%
Figure4
Figure4 = Figure4 %>%
fill_panel(Figure4A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure4A2, label = "B", scaling = "fit", panel_clip = "on", row = 5:6, column = 3:6) %>%
fill_panel(Figure4B, label = "", scaling = "none", panel_clip = "off", row = 8, column = 2:5)
Figure4
ggsave(filename = "Figure4.pdf", plot = Figure4, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
if (is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
setwd("ShinyExpresionMap/")
}else if (!is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
}else{
errorCondition("WD is invalid")
}
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("server_modules/ggplotWhiteTheme.R")
source("server_modules/violin_genes.R")
Figure4A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "ord",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure4A2 = ovary_map(data_set_to_plot = "Polysome_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "ord",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Fig4B = image_panel(path = "../Paper/Figures/Figure_4/img2_24_RGB ps.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 2.czi",
colors_to_return = c("green", "red"),
genotype_annotation = "Ord::GFP",
green_annotation = "Ord::GFP",
red_annotation = "ord::GFP mRNA",
blue_annotation = "DAPI",
label_letters = c("B", "B'", "B''"),
scale_bar_length = 20)
Figure4 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c(0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 1.1837, 1.1837, (11-8*(1.1837+0.025))-0.25-0.25-0.25),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "Figure4")
Figure4
Figure4 = Figure4 %>%
fill_panel(Figure4A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure4A2, label = "B", scaling = "fit", panel_clip = "on", row = 5:6, column = 3:6) %>%
fill_panel(Figure4B, label = "", scaling = "none", panel_clip = "off", row = 8, column = 2:5)
Figure4
ggsave(filename = "Figure4.pdf", plot = Figure4, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
source(here("Paper/Figures/Figure_4_assembly.R"))
if (is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
setwd("ShinyExpresionMap/")
}else if (!is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
}else{
errorCondition("WD is invalid")
}
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("server_modules/ggplotWhiteTheme.R")
source("server_modules/violin_genes.R")
Figure4A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "ord",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure4A2 = ovary_map(data_set_to_plot = "Polysome_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "ord",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure4B = image_panel(path = "../Paper/Figures/Figure_4/img2_24_RGB ps.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 2.czi",
colors_to_return = c("green", "red"),
genotype_annotation = "Ord::GFP",
green_annotation = "Ord::GFP",
red_annotation = "ord::GFP mRNA",
blue_annotation = "DAPI",
label_letters = c("B", "B'", "B''"),
scale_bar_length = 20)
Figure4 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c(0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 1.1837, 1.1837, (11-8*(1.1837+0.025))-0.25-0.25-0.25),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "Figure4")
Figure4
Figure4 = Figure4 %>%
fill_panel(Figure4A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure4A2, label = "B", scaling = "fit", panel_clip = "on", row = 5:6, column = 3:6) %>%
fill_panel(Figure4B, label = "", scaling = "none", panel_clip = "off", row = 8, column = 2:5)
Figure4
ggsave(filename = "Figure4.pdf", plot = Figure4, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
.3^2
.6^2
0^2
1^2
Figure4B = image_panel(path = "../Paper/Figures/Figure_4/img2_24_RGB ps.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 2.czi",
colors_to_return = c("red", "green"),
genotype_annotation = "ord::GFP",
green_annotation = "GFP",
red_annotation = "gfp mRNA",
blue_annotation = "DAPI",
label_letters = c("B", "B'", "B''"),
scale_bar_length = 20)
Figure4 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c(0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 1.1837, 1.1837, (11-8*(1.1837+0.025))-0.25-0.25-0.25),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "Figure4")
Figure4
Figure4 = Figure4 %>%
fill_panel(Figure4A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure4A2, label = "B", scaling = "fit", panel_clip = "on", row = 5:6, column = 3:6) %>%
fill_panel(Figure4B, label = "", scaling = "none", panel_clip = "off", row = 8, column = 2:5)
Figure4
ggsave(filename = "Figure4.pdf", plot = Figure4, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
Figure4B = image_panel(path = "../Paper/Figures/Figure_4/img2_24_RGB ps.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 2.czi",
colors_to_return = c("red", "green"),
genotype_annotation = "ord::GFP",
green_annotation = "GFP",
red_annotation = "gfp mRNA",
blue_annotation = "DAPI",
label_letters = c("C", "C'", "C''"),
scale_bar_length = 20)
Figure4 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c(0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 1.1837, 1.1837, (11-8*(1.1837+0.025))-0.25-0.25-0.25),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "Figure4")
Figure4
Figure4 = Figure4 %>%
fill_panel(Figure4A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure4A2, label = "B", scaling = "fit", panel_clip = "on", row = 5:6, column = 3:6) %>%
fill_panel(Figure4B, label = "", scaling = "none", panel_clip = "off", row = 8, column = 2:5)
Figure4
ggsave(filename = "Figure4.pdf", plot = Figure4, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
