gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Fig2B = image_panel(path = "../Paper/Figures/placeholder.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("C", "C'", "C''"))
Fig2C = image_panel(path = "../Paper/Figures/Figure_2/Control.Rps19b-GFP.40x.4_s3_5.tif",
colors_to_return = c("green", "blue", "red"),
genotype_annotation = "RpS19b::GFP",
red_annotation = "1B1",
green_annotation = "GFP",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"))
Figure2 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.0, rep(2.0694, 2), 2.0, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure2 = Figure2 %>%
fill_panel(Figure2A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure2A2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6) %>%
fill_panel(Fig2B, label = "", scaling = "none", panel_clip = "off", row = 6, column = 2:5) %>%
fill_panel(Fig2C, label = "", scaling = "none", panel_clip = "off", row = 7, column = 2:5)
Figure2
ggsave(filename = "Figure2.pdf", plot = Figure2, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
Fig2C = image_panel(path = "../Paper/Figures/Figure_2/Control.Rps19b-GFP.40x.4_s3_5.tif",
colors_to_return = c("green", "blue", "red"),
genotype_annotation = "RpS19b::GFP",
red_annotation = "1B1",
green_annotation = "GFP",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"))
Fig2C = image_panel(path = "../Paper/Figures/Figure_2/Control.Rps19b-GFP.40x.4_s3_5.tif",
colors_to_return = c("green", "blue", "red"),
genotype_annotation = "RpS19b::GFP",
red_annotation = "1B1",
green_annotation = "GFP",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''", "D'''"))
colors_to_return = c("green", "blue", "red")
path = "../Paper/Figures/Figure_2/Control.Rps19b-GFP.40x.4_s3_5.tif"
colors_to_return = c("green", "blue", "red")
genotype_annotation = "RpS19b::GFP"
red_annotation = "1B1"
green_annotation = "GFP"
blue_annotation = "Vasa"
label_letters = c("D", "D'", "D''", "D'''")
greyscale_annotate = function(greyscale, color_annotation, label_letters){
gg = ggdraw() + draw_image(greyscale, scale = 1)+
theme(plot.margin = unit(c(0, 0, 0, 0), units = "in"))+
annotate(geom = "text",  x = 0.98, y = 0.96, hjust = 1, vjust = 1,
label = color_annotation, color = "white", family = "Helvetica", size = 12/.pt)+
annotate(geom = "text", x = 0.02, y = 0.96, hjust = 0, vjust = 1,
label = label_letters, color = "white", family = "Helvetica", size = 12/.pt)
return(gg)
}
rgb_image_raw = image_read(path)
rgb_greyscales = as.list(image_separate(rgb_image_raw))
default_color_order = c("red", "green", "blue")
greyscales_pared = rgb_greyscales[default_color_order %in% colors_to_return]
default_color_order_pared = default_color_order[default_color_order %in% colors_to_return]
greyscales_ordered = greyscales_pared[order(factor(default_color_order_pared, levels = colors_to_return))]
all_grey_annotation = list(red_annotation, green_annotation, blue_annotation)
all_grey_annotation_ordered = all_grey_annotation[order(factor(default_color_order, levels = colors_to_return))]
all_grey_annotation_pared = all_grey_annotation_ordered[!is.na(all_grey_annotation_ordered)][1:length(colors_to_return)]
label_letters_grey = label_letters[-1]
all_gg = mapply(FUN = greyscale_annotate,
greyscale = greyscales_ordered,
color_annotation = all_grey_annotation_pared,
label_letters = label_letters_grey,
SIMPLIFY = FALSE, USE.NAMES = T)
annotation_spacer = 0
# image_ano = rgb_image_raw
image_ano = ggdraw() + draw_image(rgb_image_raw, scale = 1)+
theme(plot.margin = unit(c(0, 0, 0, 0), units = "in"))
if (!is.na(red_annotation)) {
image_ano = image_ano +
annotate(geom = "text",  x = 0.98, y = 0.96, hjust = 1, vjust = 1,
label = red_annotation, color = "#ED1C24", family = "Helvetica", size = 12/.pt)
# image_ano = image_annotate(image_ano, text = red_annotation, gravity = "northeast",
#                            color = "#ED1C24", size = 12*3.402778, font = "Helvetica",
#                            location = paste0("+", annotation_spacer))
annotation_spacer = annotation_spacer + strwidth(paste0(red_annotation, " ") , units = "inches", family = "Helvetica")/2.0694
}
if (!is.na(green_annotation)) {
image_ano = image_ano +
annotate(geom = "text", x = 0.98-annotation_spacer, y = 0.96, hjust = 1, vjust = 1,
label = green_annotation, color = "#00A651", family = "Helvetica", size = 12/.pt)
annotation_spacer = annotation_spacer + strwidth(paste0(green_annotation, " ") , units = "inches",
family = "Helvetica")/2.0694
}
if (!is.na(blue_annotation)) {
image_ano = image_ano +
annotate(geom = "text", x = 0.98-annotation_spacer, y = 0.96, hjust = 1, vjust = 1,
label = blue_annotation, color = "#1C75BC", family = "Helvetica", size = 12/.pt)
}
color_gg = image_ano+
annotate(geom = "text", x = 0.02, y = 0.96, hjust = 0, vjust = 1,
label = label_letters[[1]], color = "white", family = "Helvetica", size = 12/.pt)+
annotate(geom = "text", x = 0.02, y = 0.04, hjust = 0, vjust = 0,
label = genotype_annotation, color = "white", family = "Helvetica", size = 12/.pt)
color_gg
all_gg$color = color_gg
names(all_gg) = c(colors_to_return, "color")
image_order_vector = c("color", colors_to_return)
all_gg_ordered = all_gg[order(factor(names(all_gg), levels = image_order_vector))]
all_gg_ordered
options("multipanelfigure.defaultdpi"= 245)
figure = multi_panel_figure(
width = rep(2.0694, length(all_gg_ordered)),
height = c(1.1837), rows = 1, row_spacing = 0, column_spacing = 0.025, unit = "in", panel_label_type = "none")
figure
for (fig_index in 1:length(all_gg_ordered)) {
figure = figure %>% fill_panel(all_gg_ordered[[all_gg_ordered]], label = "", scaling = "fit", panel_clip = "off")
}
1:length(all_gg_ordered)
fig_index
for (fig_index in 1:length(all_gg_ordered)) {
figure = figure %>% fill_panel(all_gg_ordered[[fig_index]], label = "", scaling = "fit", panel_clip = "off")
}
figure
setwd("ShinyExpresionMap")
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
# Figure2A1 = png_as_gg("Paper/Figures/Figure_2/RpS19b_input.png")
# Figure2A2 = png_as_gg("../Paper/Figures/Figure_2/RpS19b_SC_GC.png")
source("server_modules/ovary_map.R")
Figure2A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Figure2A2 = ovary_map(data_set_to_plot = "Single_cell_seq_germline",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Fig2B = image_panel(path = "../Paper/Figures/placeholder.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("C", "C'", "C''"))
Fig2C = image_panel(path = "../Paper/Figures/Figure_2/Control.Rps19b-GFP.40x.4_s3_5.tif",
colors_to_return = c("green", "blue", "red"),
genotype_annotation = "RpS19b::GFP",
red_annotation = "1B1",
green_annotation = "GFP",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''", "D'''"))
Figure2 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.0, rep(2.0694, 2), 2.0, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure2 = Figure2 %>%
fill_panel(Figure2A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure2A2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6) %>%
fill_panel(Fig2B, label = "", scaling = "none", panel_clip = "off", row = 6, column = 2:5) %>%
fill_panel(Fig2C, label = "", scaling = "none", panel_clip = "off", row = 7, column = 2:5)
Figure2
ggsave(filename = "Figure2.pdf", plot = Figure2, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
setwd("ShinyExpresionMap")
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
# Figure2A1 = png_as_gg("Paper/Figures/Figure_2/RpS19b_input.png")
# Figure2A2 = png_as_gg("../Paper/Figures/Figure_2/RpS19b_SC_GC.png")
source("server_modules/ovary_map.R")
Figure2A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Figure2A2 = ovary_map(data_set_to_plot = "Single_cell_seq_germline",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Fig2B = image_panel(path = "../Paper/Figures/placeholder.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("C", "C'", "C''"))
Fig2C = image_panel(path = "../Paper/Figures/Figure_2/Control.Rps19b-GFP.40x.4_s3_5.tif",
colors_to_return = c("green", "blue", "red"),
genotype_annotation = "RpS19b::GFP",
red_annotation = "1B1",
green_annotation = "GFP",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''", "D'''"))
Figure2 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.0, rep(2.0694, 2), 2.0, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure2 = Figure2 %>%
fill_panel(Figure2A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure2A2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6) %>%
fill_panel(Fig2B, label = "", scaling = "none", panel_clip = "off", row = 6, column = 2:5) %>%
fill_panel(Fig2C, label = "", scaling = "none", panel_clip = "off", row = 7, column = 2:6)
Figure2
ggsave(filename = "Figure2.pdf", plot = Figure2, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
setwd("ShinyExpresionMap")
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
# Figure2A1 = png_as_gg("Paper/Figures/Figure_2/RpS19b_input.png")
# Figure2A2 = png_as_gg("../Paper/Figures/Figure_2/RpS19b_SC_GC.png")
source("server_modules/ovary_map.R")
Figure2A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Figure2A2 = ovary_map(data_set_to_plot = "Single_cell_seq_germline",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Fig2B = image_panel(path = "../Paper/Figures/placeholder.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("C", "C'", "C''"))
Fig2C = image_panel(path = "../Paper/Figures/Figure_2/Control.Rps19b-GFP.40x.4_s3_5.tif",
colors_to_return = c("green", "blue", "red"),
genotype_annotation = "RpS19b::GFP",
red_annotation = "1B1",
green_annotation = "GFP",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''", "D'''"))
Figure2 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.0, rep(2.0694, 2), 2.0, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure2 = Figure2 %>%
fill_panel(Figure2A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure2A2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6) %>%
fill_panel(Fig2B, label = "", scaling = "none", panel_clip = "off", row = 6, column = 2:5) %>%
fill_panel(Fig2C, label = "", scaling = "none", panel_clip = "off", row = 7, column = 2:7)
Figure2
ggsave(filename = "Figure2.pdf", plot = Figure2, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
8.3526/4
(2.0694+0.025)*4
2.0694+(2.0694+0.025)*3
setwd("ShinyExpresionMap")
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
# Figure2A1 = png_as_gg("Paper/Figures/Figure_2/RpS19b_input.png")
# Figure2A2 = png_as_gg("../Paper/Figures/Figure_2/RpS19b_SC_GC.png")
source("server_modules/ovary_map.R")
Figure2A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Figure2A2 = ovary_map(data_set_to_plot = "Single_cell_seq_germline",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Fig2B = image_panel(path = "../Paper/Figures/placeholder.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("C", "C'", "C''"))
Fig2C = image_panel(path = "../Paper/Figures/Figure_2/Control.Rps19b-GFP.40x.4_s3_5.tif",
colors_to_return = c("green", "blue", "red"),
genotype_annotation = "RpS19b::GFP",
red_annotation = "1B1",
green_annotation = "GFP",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''", "D'''"))
Figure2 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure2 = Figure2 %>%
fill_panel(Figure2A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure2A2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6) %>%
fill_panel(Fig2B, label = "", scaling = "none", panel_clip = "off", row = 6, column = 2:5) %>%
fill_panel(Fig2C, label = "", scaling = "none", panel_clip = "off", row = 7, column = 2:7)
Figure2
ggsave(filename = "Figure2.pdf", plot = Figure2, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
(8.5-4*(2.0694+0.025))/2
(11-8*(1.1837+0.025))/2
sum(c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3))
sum(c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
7-3
0.2-.04
runApp()
runApp()
shape_ymin
group_geometry_bounding
runApp()
runApp()
runApp()
runApp()
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="2CC"][[1]][1]
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="2CC"][[1]][1]+
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="16CC_3"][[1]][3]
(group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="2CC"][[1]][1]+
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="16CC_3"][[1]][3]/2)
1.881905+8.436551
10.31846/2
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="2CC"]
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="2CC"][[1]
]
(group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="2CC"][[1]][1]+
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="16CC_3"][[1]][3]/2)
runApp()
group_geometry_bounding
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="2CC"][[1]][1]
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="16CC_3"][[1]][3]
(2+3)/2
(group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="2CC"][[1]][1]+
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="16CC_3"][[1]][3]/2)
(group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="2CC"][[1]][1]+
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="16CC_3"][[1]][3]/2)[1]
(group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="2CC"][[1]][1]+
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="16CC_3"][[1]][3]/2)[[1]]
runApp()
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="2CC"][[1]][1]
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="2CC"][[1]][1]+
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="16CC_3"][[1]][3]/2)[[1]]
(group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="2CC"][[1]][1]+
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="16CC_3"][[1]][3]/2)[[1]]
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="2CC"][[1]][1]
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="16CC_3"][[1]][3]
(group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="2CC"][[1]][1]+
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="16CC_3"][[1]][3]/2)
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="2CC"][[1]][1]
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="16CC_3"][[1]][3]/2
group_geometry_bounding$bbox[group_geometry_bounding$cell_type=="16CC_3"]
runApp()
runApp()
runApp()
setwd("ShinyExpresionMap")
library(ggplot2)
library(multipanelfigure)
library(pdftools)
library(extrafont)
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/eps_as_gg.R")
source("../Paper/Helper_functions/png_as_gg.R")
# font_import(paths = c("C:/Users/Elliot/AppData/Local/Microsoft/Windows/Fonts/"), prompt = F)
source("server_modules/ovary_map_cartoon.R")
Figure1_A1 =  ovary_map_cartoon(text_scale = 12/ggplot2::.pt)+
theme(aspect.ratio = .28,
plot.margin = margin(0.0, 0.0, 0.1, 0.0, unit = "in"))
Figure1_B1 = eps_as_gg("../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps")
Figure1_C = eps_as_gg("../Paper/Figures/Figure_1/polysome_seq_diagram.eps")
# Figure1_D_paths = list.files(path = "../Paper/Figures/Figure_1/", pattern = "*heatmap.png", full.names = TRUE)
# Figure1_D = lapply(Figure1_D_paths, png_as_gg)
Figure1 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.0, rep(2.0694, 2), 2.0, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure1
# plotly_IMAGE(
#   input_plotly,
#   width = 500,
#   height = 500,
#   format = "png",
#   scale = 1,
#   "plotly_input.png"
# )
Figure1 = Figure1 %>%
fill_panel(Figure1_A1, label = "A", label_just = "bottom", scaling = "none", panel_clip = "off", row = 2:3, column = 3:6, family = "Helvetica") %>%
fill_panel(Figure1_B1, label = "B", label_just = "bottom", scaling = "none", panel_clip = "off", row = 4:6, column = 3:6, family = "Helvetica") %>%
fill_panel(Figure1_C, label = "C", label_just = "bottom", scaling = "none", panel_clip = "off", row = 7:8, column = 3:5, family = "Helvetica")
# fill_panel(Figure1_D[[1]], label = "D", label_just = "bottom", scaling = "none", panel_clip = "off", row = 5:10, column = 3:6, family = "Helvetica")
# fill_panel(Figure1_D[[2]], label = "D'", label_just = "bottom", scaling = "none", panel_clip = "off", row = 9:10, column = 5:6, family = "Helvetica") %>%
# fill_panel(Figure1_D[[3]], label = "E", label_just = "bottom", scaling = "none", panel_clip = "off", row = 11:12, column = 3:4, family = "Helvetica") %>%
# fill_panel(Figure1_D[[4]], label = "E'", label_just = "bottom", scaling = "none", panel_clip = "off", row = 11:12, column = 5:6, family = "Helvetica")
Figure1
ggsave(filename = "Figure1.pdf", plot = Figure1, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
setwd("ShinyExpresionMap")
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
# Figure2A1 = png_as_gg("Paper/Figures/Figure_2/RpS19b_input.png")
# Figure2A2 = png_as_gg("../Paper/Figures/Figure_2/RpS19b_SC_GC.png")
source("server_modules/ovary_map.R")
Figure2A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Figure2A2 = ovary_map(data_set_to_plot = "Single_cell_seq_germline",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Fig2B = image_panel(path = "../Paper/Figures/placeholder.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("C", "C'", "C''"))
Fig2C = image_panel(path = "../Paper/Figures/Figure_2/Control.Rps19b-GFP.40x.4_s3_5.tif",
colors_to_return = c("green", "blue", "red"),
genotype_annotation = "RpS19b::GFP",
red_annotation = "1B1",
green_annotation = "GFP",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''", "D'''"))
Figure2 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure2 = Figure2 %>%
fill_panel(Figure2A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure2A2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6) %>%
fill_panel(Fig2B, label = "", scaling = "none", panel_clip = "off", row = 6, column = 2:5) %>%
fill_panel(Fig2C, label = "", scaling = "none", panel_clip = "off", row = 7, column = 2:7)
Figure2
ggsave(filename = "Figure2.pdf", plot = Figure2, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
setwd("ShinyExpresionMap")
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("server_modules/ovary_map.R")
Figure2SA1 = ovary_map(data_set_to_plot = "Polysome_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Figure2SA2 = ovary_map(data_set_to_plot = "Single_cell_seq_soma",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Figure2 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.0, rep(2.0694, 2), 2.0, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure2 = Figure2 %>%
fill_panel(Figure2SA1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure2SA2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6)
Figure2
ggsave(filename = "Supplemental_Figure2.pdf", plot = Figure2, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
setwd("ShinyExpresionMap")
library(ggplot2)
library(multipanelfigure)
library(pdftools)
library(extrafont)
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/eps_as_gg.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("../Paper/Helper_functions/export_plotly2SVG.R")
# font_import(paths = c("C:/Users/Elliot/AppData/Local/Microsoft/Windows/Fonts/"), prompt = F)
source("server_modules/ovary_map_cartoon.R")
Figure1_A1 =  ovary_map_cartoon(text_scale = 12/ggplot2::.pt)+
theme(aspect.ratio = .28,
plot.margin = margin(0.0, 0.0, 0.1, 0.0, unit = "in"))
Figure1_B1 = eps_as_gg("../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps")
plotly_files = c("Preprocessed_data/Input_seq_plotly_heatmap.RDS",
"Preprocessed_data/Polysome_seq_plotly_heatmap.RDS",
"Preprocessed_data/Single_cell_seq_germline_plotly_heatmap.RDS",
"Preprocessed_data/Single_cell_seq_soma_plotly_heatmap.RDS")
plotly_file_names = lapply(plotly_files, basename)
input_plotlys = lapply(plotly_files, readRDS)
input_plotlys[1]
Figure1_C_paths = list.files(path = "../Paper/Figures/Figure_1/", pattern = "*RDS.eps", full.names = TRUE)
Figure1_C_paths
Figure1_C_paths
test = eps_as_gg(Figure1_C_paths[1])
draw_grob(test)
grid.draw(test)
plot)1
plot(1)
