library(sf)
library(ggplot2)
library(plotly)
library(ggmap)
library(cowplot)
library(purrr)
library(tinytex)
library(quanteda)
library(ggpubr)
library(rstatix)
# library(Cairo)
library(rlang)
library(reticulate)
library(multipanelfigure)
here::i_am("Paper/figure_wrapper.R")
library(here)
here()
# use_condaenv(here("renv/python/condaenvs/renv-python/"))
Sys.setenv(RETICULATE_PYTHON = here("renv/python/condaenvs/renv-python/"))
source(here("ShinyExpresionMap/server_modules/ggplotWhiteTheme.R"))
setwd(here())
source(here("Paper/Figures/Figure_1_assembly.R"))
source(here("Paper/Figures/Figure_2_assembly.R"))
source(here("Paper/Figures/Figure_3_assembly.R"))
source(here("Paper/Figures/Figure_4_assembly.R"))
source(here("Paper/Figures/Figure_1S_assembly.R"))
source(here("Paper/Figures/Figure_2S_assembly.R"))
source(here("Paper/Figures/Figure_3S_assembly.R"))
source(here("Paper/Figures/Figure_4S_assembly.R"))
setwd(here())
rmarkdown::render(here("Paper/Figures/figure_wrapper.rmd"),
output_dir = here("Paper/Figures/Compiled_panels/"),
output_file = paste0("Developmental_Landscape_compiled_figures", '_', Sys.Date(), '.pdf'))
sum(c(0.0694, 2.025))
2.0694+0.025
Figure3 = Figure3 %>%
fill_panel(Figure3A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 2:6) %>%
fill_panel(Figure3A2, label = "B", scaling = "fit", panel_clip = "on", row = 5:6, column = 2:6) %>%
fill_panel(Figure3B, label = "", scaling = "none", panel_clip = "off", row = 8, column = 2:5) %>%
fill_panel(Figure3C, label = "", scaling = "none", panel_clip = "off", row = 9, column = 2:5)
if (is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
setwd("ShinyExpresionMap/")
}else if (!is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
}else{
errorCondition("WD is invalid")
}
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("server_modules/ovary_map.R")
Figure3A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure3A2 = ovary_map(data_set_to_plot = "Single_cell_seq_germline",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure3B = image_panel(path = "../Paper/Figures/placeholder.tif",
path_to_czi = "../Paper/Figures/Figure_3/Control.Rps19b-GFP.40x.4.czi",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("C", "C'", "C''"),
scale_bar_length = 20)
Figure3C = image_panel(path = "../Paper/Figures/Figure_3/Control.Rps19b-GFP.40x.4_s3_5.tif",
path_to_czi = "../Paper/Figures/Figure_3/Control.Rps19b-GFP.40x.4.czi",
colors_to_return = c("green", "blue"),
genotype_annotation = "RpS19b::GFP",
red_annotation = "1B1",
green_annotation = "GFP",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"),
scale_bar_length = 20)
Figure3 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c(0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 1.1837, 1.1837, (11-8*(1.1837+0.025))-0.25-0.25-0.25),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "Figure3")
# Figure3
Figure3 = Figure3 %>%
fill_panel(Figure3A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 2:6) %>%
fill_panel(Figure3A2, label = "B", scaling = "fit", panel_clip = "on", row = 5:6, column = 2:6) %>%
fill_panel(Figure3B, label = "", scaling = "none", panel_clip = "off", row = 8, column = 2:5) %>%
fill_panel(Figure3C, label = "", scaling = "none", panel_clip = "off", row = 9, column = 2:5)
Figure3
if (is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
setwd("ShinyExpresionMap/")
}else if (!is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
}else{
errorCondition("WD is invalid")
}
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("server_modules/ovary_map.R")
Figure3A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure3A2 = ovary_map(data_set_to_plot = "Single_cell_seq_germline",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure3B = image_panel(path = "../Paper/Figures/placeholder.tif",
path_to_czi = "../Paper/Figures/Figure_3/Control.Rps19b-GFP.40x.4.czi",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("C", "C'", "C''"),
scale_bar_length = 20)
Figure3C = image_panel(path = "../Paper/Figures/Figure_3/Control.Rps19b-GFP.40x.4_s3_5.tif",
path_to_czi = "../Paper/Figures/Figure_3/Control.Rps19b-GFP.40x.4.czi",
colors_to_return = c("green", "blue"),
genotype_annotation = "RpS19b::GFP",
red_annotation = "1B1",
green_annotation = "GFP",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"),
scale_bar_length = 20)
Figure3 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c(0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 1.1837, 1.1837, (11-8*(1.1837+0.025))-0.25-0.25-0.25),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "Figure3")
# Figure3
Figure3 = Figure3 %>%
fill_panel(Figure3A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure3A2, label = "B", scaling = "fit", panel_clip = "on", row = 5:6, column = 3:6) %>%
fill_panel(Figure3B, label = "", scaling = "none", panel_clip = "off", row = 8, column = 2:5) %>%
fill_panel(Figure3C, label = "", scaling = "none", panel_clip = "off", row = 9, column = 2:5)
Figure3
if (is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
setwd("ShinyExpresionMap/")
}else if (!is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
}else{
errorCondition("WD is invalid")
}
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("server_modules/ovary_map.R")
Figure3A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure3A2 = ovary_map(data_set_to_plot = "Single_cell_seq_germline",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure3B = image_panel(path = "../Paper/Figures/placeholder.tif",
path_to_czi = "../Paper/Figures/Figure_3/Control.Rps19b-GFP.40x.4.czi",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("C", "C'", "C''"),
scale_bar_length = 20)
Figure3C = image_panel(path = "../Paper/Figures/Figure_3/Control.Rps19b-GFP.40x.4_s3_5.tif",
path_to_czi = "../Paper/Figures/Figure_3/Control.Rps19b-GFP.40x.4.czi",
colors_to_return = c("green", "blue"),
genotype_annotation = "RpS19b::GFP",
red_annotation = "1B1",
green_annotation = "GFP",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"),
scale_bar_length = 20)
Figure3 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c(0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 1.1837, 1.1837, (11-8*(1.1837+0.025))-0.25-0.25-0.25),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "Figure3")
# Figure3
Figure3 = Figure3 %>%
fill_panel(Figure3A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:4, column = 3:6) %>%
fill_panel(Figure3A2, label = "B", scaling = "fit", panel_clip = "on", row = 5:6, column = 3:6) %>%
fill_panel(Figure3B, label = "", scaling = "none", panel_clip = "off", row = 8, column = 2:5) %>%
fill_panel(Figure3C, label = "", scaling = "none", panel_clip = "off", row = 9, column = 2:5)
Figure3
if (is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
setwd("ShinyExpresionMap/")
}else if (!is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
}else{
errorCondition("WD is invalid")
}
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("server_modules/ovary_map.R")
Figure3A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure3A2 = ovary_map(data_set_to_plot = "Single_cell_seq_germline",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure3B = image_panel(path = "../Paper/Figures/placeholder.tif",
path_to_czi = "../Paper/Figures/Figure_3/Control.Rps19b-GFP.40x.4.czi",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("C", "C'", "C''"),
scale_bar_length = 20)
Figure3C = image_panel(path = "../Paper/Figures/Figure_3/Control.Rps19b-GFP.40x.4_s3_5.tif",
path_to_czi = "../Paper/Figures/Figure_3/Control.Rps19b-GFP.40x.4.czi",
colors_to_return = c("green", "blue"),
genotype_annotation = "RpS19b::GFP",
red_annotation = "1B1",
green_annotation = "GFP",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"),
scale_bar_length = 20)
Figure3 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c(0.25, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 1.1837, 1.1837, (11-8*(1.1837+0.025))-0.25-0.25-0.25-0.25),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "Figure3")
# Figure3
Figure3 = Figure3 %>%
fill_panel(Figure3A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:4, column = 3:6) %>%
fill_panel(Figure3A2, label = "B", scaling = "fit", panel_clip = "on", row = 5:6, column = 3:6) %>%
fill_panel(Figure3B, label = "", scaling = "none", panel_clip = "off", row = 8, column = 2:5) %>%
fill_panel(Figure3C, label = "", scaling = "none", panel_clip = "off", row = 9, column = 2:5)
Figure3
if (is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
setwd("ShinyExpresionMap/")
}else if (!is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
}else{
errorCondition("WD is invalid")
}
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("server_modules/ovary_map.R")
Figure3A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure3A2 = ovary_map(data_set_to_plot = "Single_cell_seq_germline",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure3B = image_panel(path = "../Paper/Figures/placeholder.tif",
path_to_czi = "../Paper/Figures/Figure_3/Control.Rps19b-GFP.40x.4.czi",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("C", "C'", "C''"),
scale_bar_length = 20)
Figure3C = image_panel(path = "../Paper/Figures/Figure_3/Control.Rps19b-GFP.40x.4_s3_5.tif",
path_to_czi = "../Paper/Figures/Figure_3/Control.Rps19b-GFP.40x.4.czi",
colors_to_return = c("green", "blue"),
genotype_annotation = "RpS19b::GFP",
red_annotation = "1B1",
green_annotation = "GFP",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"),
scale_bar_length = 20)
Figure3 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c(0.25, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 1.1837, 1.1837, (11-8*(1.1837+0.025))-0.25-0.25-0.25-0.25),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "Figure3")
# Figure3
Figure3 = Figure3 %>%
fill_panel(Figure3A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:4, column = 3:6) %>%
fill_panel(Figure3A2, label = "B", scaling = "fit", panel_clip = "on", row = 6:7, column = 3:6) %>%
fill_panel(Figure3B, label = "", scaling = "none", panel_clip = "off", row = 8, column = 2:5) %>%
fill_panel(Figure3C, label = "", scaling = "none", panel_clip = "off", row = 9, column = 2:5)
Figure3
if (is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
setwd("ShinyExpresionMap/")
}else if (!is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
}else{
errorCondition("WD is invalid")
}
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("server_modules/ovary_map.R")
Figure3A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure3A2 = ovary_map(data_set_to_plot = "Single_cell_seq_germline",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure3B = image_panel(path = "../Paper/Figures/placeholder.tif",
path_to_czi = "../Paper/Figures/Figure_3/Control.Rps19b-GFP.40x.4.czi",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("C", "C'", "C''"),
scale_bar_length = 20)
Figure3C = image_panel(path = "../Paper/Figures/Figure_3/Control.Rps19b-GFP.40x.4_s3_5.tif",
path_to_czi = "../Paper/Figures/Figure_3/Control.Rps19b-GFP.40x.4.czi",
colors_to_return = c("green", "blue"),
genotype_annotation = "RpS19b::GFP",
red_annotation = "1B1",
green_annotation = "GFP",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"),
scale_bar_length = 20)
Figure3 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c(0.25, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 1.1837, 1.1837, (11-8*(1.1837+0.025))-0.25-0.25-0.25-0.25),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "Figure3")
# Figure3
Figure3 = Figure3 %>%
fill_panel(Figure3A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:4, column = 3:6) %>%
fill_panel(Figure3A2, label = "B", scaling = "fit", panel_clip = "on", row = 6:7, column = 3:6) %>%
fill_panel(Figure3B, label = "", scaling = "none", panel_clip = "off", row = 9, column = 2:5) %>%
fill_panel(Figure3C, label = "", scaling = "none", panel_clip = "off", row = 10, column = 2:5)
Figure3
setwd("D:/R_projects/Developmental-Landscape")
setwd("Y:/Data/ElliotMartin/rawdata/RibosomeBiogen/Confocal/09.24.2021")
raw.data = data.frame(read.xlsx("aramis_p53_rescue_quant.xlsx", sheet = 1))
head(raw.data)
long = raw.data %>%
group_by(Genotype) %>% mutate(Percent = 100*Count/sum(Count))
long$Phenotype = factor(long$Phenotype, levels = c("single cells", "cyst", "No germline"))
head(long)
# ggplot code
bar = function(toplot){
ggplot(toplot, aes(x=Genotype, y=Percent, fill=Phenotype))+
geom_bar(stat = "identity")+
scale_x_discrete(labels = c("a", "b"))+
xlab("")+
scale_y_continuous(expand = c(0,0), limits = c(NA, 110))+
scale_fill_manual(values = c("#F16468", "#9A4339", "#5B1A18"))+
ylab("Percent phenotype")+
theme_white(base_family = "sans")+
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
aspect.ratio = 1)
}
library(tidyverse)
library(openxlsx)
library(rstatix)
source("Y:/Data/ElliotMartin/rscripts/Finished Scripts/ggplotWhiteTheme.R")
raw.data = data.frame(read.xlsx("aramis_p53_rescue_quant.xlsx", sheet = 1))
head(raw.data)
long = raw.data %>%
group_by(Genotype) %>% mutate(Percent = 100*Count/sum(Count))
long$Phenotype = factor(long$Phenotype, levels = c("single cells", "cyst", "No germline"))
head(long)
# ggplot code
bar = function(toplot){
ggplot(toplot, aes(x=Genotype, y=Percent, fill=Phenotype))+
geom_bar(stat = "identity")+
scale_x_discrete(labels = c("a", "b"))+
xlab("")+
scale_y_continuous(expand = c(0,0), limits = c(NA, 110))+
scale_fill_manual(values = c("#F16468", "#9A4339", "#5B1A18"))+
ylab("Percent phenotype")+
theme_white(base_family = "sans")+
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
aspect.ratio = 1)
}
plots = long %>% bar()
plots
# ggplot code
bar = function(toplot){
ggplot(toplot, aes(x=Genotype, y=Percent, fill=Phenotype))+
geom_bar(stat = "identity")+
scale_x_discrete(labels = c("a", "b"))+
xlab("")+
# scale_y_continuous(expand = c(0,0), limits = c(NA, 110))+
scale_fill_manual(values = c("#F16468", "#9A4339", "#5B1A18"))+
ylab("Percent phenotype")+
theme_white(base_family = "sans")+
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
aspect.ratio = 1)
}
plots = long %>% bar()
plots
head(raw.data)
long = raw.data %>%
group_by(Genotype) %>% mutate(Percent = 100*Count/sum(Count))
long$Phenotype = factor(long$Phenotype, levels = c("single cell", "cyst", "No germline"))
head(long)
# ggplot code
bar = function(toplot){
ggplot(toplot, aes(x=Genotype, y=Percent, fill=Phenotype))+
geom_bar(stat = "identity")+
scale_x_discrete(labels = c("a", "b"))+
xlab("")+
# scale_y_continuous(expand = c(0,0), limits = c(NA, 110))+
scale_fill_manual(values = c("#F16468", "#9A4339", "#5B1A18"))+
ylab("Percent phenotype")+
theme_white(base_family = "sans")+
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
aspect.ratio = 1)
}
plots = long %>% bar()
plots
ggsave("barplot_athosRNAi_p53_rescue.pdf", width = 2.5, height = 2.3, bg = "transparent", device=cairo_pdf)
head(long)
CG4901_fisher = long %>%
select(-Percent) %>%
pivot_wider(names_from = Phenotype, values_from = Count) %>%
column_to_rownames("Genotype") %>%
fisher_test(detailed = T)
CG4901_fisher
CG4901_n = long %>% group_by(Genotype) %>% summarize(n = sum(Count))
write_lines(list("CG4901_fisher \n", CG4901_fisher, CG4901_n), "athosRNAi_p53_rescue.txt")
CG4901_n
head(long)
setwd("Y:/Data/ElliotMartin/rawdata/RibosomeBiogen/Confocal/09.09.2021")
library(tidyverse)
library(openxlsx)
library(rstatix)
source("Y:/Data/ElliotMartin/rscripts/Finished Scripts/ggplotWhiteTheme.R")
raw.data = data.frame(read.xlsx("CG9253_p53_het_rescue.xlsx", sheet = 1))
head(raw.data)
long = raw.data %>%
group_by(Genotype) %>% mutate(Percent = 100*Count/sum(Count))
long$Phenotype = factor(long$Phenotype, levels = c("single cells", "cyst", "No germline"))
head(long)
# ggplot code
bar = function(toplot){
ggplot(toplot, aes(x=Genotype, y=Percent, fill=Phenotype))+
geom_bar(stat = "identity")+
scale_x_discrete(labels = c("a", "b"))+
xlab("")+
scale_y_continuous(expand = c(0,0), limits = c(NA, 110))+
scale_fill_manual(values = c("#F16468", "#9A4339", "#5B1A18"))+
ylab("Percent phenotype")+
theme_white(base_family = "sans")+
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
aspect.ratio = 1)
}
plots = long %>% bar()
plots
# ggsave("barplot_porthosRNAi_p53_rescue.pdf", width = 2.5, height = 2.3, bg = "transparent", device=cairo_pdf)
head(long)
