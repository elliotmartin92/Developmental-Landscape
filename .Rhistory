set_names(column_names) %>%
filter(FBGN %in% FBIDs_in_GO_id) %>%
pivot_longer(cols = -c(FBGN, Symbol), names_to = "Genotype", values_to = "Mean_expression")
data.seq_pared %>%
set_names(column_names)
data.seq_pared
data.seq = readRDS("Preprocessed_data/preprocessed_RNA_seq_data.RDS")
data.seq_pared = data.seq[1, 10, 2:5] #extract columns used for plotting
data.seq_pared
data.seq = readRDS("Preprocessed_data/preprocessed_RNA_seq_data.RDS")
data.seq_pared = data.seq[c(1, 10, 2:5)] #extract columns used for plotting
data.seq_pared
shiny::runApp()
data.seq = readRDS("Preprocessed_data/single_cell_seq_fold_changes_germarium_soma.RDS")
data.seq_pared = data.seq %>% relocate(Symbol, .after = FBGN)
data.seq_pared
column_names = c("FBGN",
"Symbol",
"TF/CC",
"aEc",
"cEc",
"pEc",
"FSC/pre-FC",
"pre-stalk",
"stalk",
"polar")
genotype_levels = c("TF/CC",
"aEc",
"cEc",
"pEc",
"FSC/pre-FC",
"pre-stalk",
"stalk",
"polar")
selected_GO_id
FBIDs_in_GO_id
FBIDs_in_GO_id = GO_Term_to_FBID$ensembl_id[GO_Term_to_FBID$go_id == selected_GO_id]
selected_gene_data =
data.seq_pared %>%
set_names(column_names) %>%
filter(FBGN %in% FBIDs_in_GO_id) %>%
pivot_longer(cols = -c(FBGN, Symbol), names_to = "Genotype", values_to = "Mean_expression")
yaxis_label = expression("Relative log fold change")
selected_gene_data_norm = selected_gene_data %>%
dplyr::ungroup() %>%
dplyr::mutate(Norm_expression = Mean_expression)
stats = selected_gene_data_norm %>%
ungroup() %>%
wilcox_test(formula = Norm_expression~Genotype, paired = TRUE, p.adjust.method = "holm") %>%
add_xy_position(x = "Genotype", dodge = 0.8, step.increase = 0.5)
selected_gene_data_norm
stats
gene_violin_plot =
ggplot(data = selected_gene_data_norm, mapping = aes(x = Genotype, y = Norm_expression))+
geom_violin()+
stat_pvalue_manual(stats, size = text_scale/3)+
ylab(yaxis_label)+
scale_y_continuous(expand = expansion(mult = c(0, 0.1)))+
stat_summary(mapping = aes(group = Genotype),
fun = median, fun.min = median, fun.max = median,
geom = "crossbar", width = 0.4)+
geom_point(position = position_jitter(seed = 1, width = 0.2), color="grey60")+
theme_white()+
theme(axis.text.x = element_text(size = text_scale),
axis.text.y = element_text(size = text_scale),
axis.title.x = element_text(size = text_scale),
axis.title.y = element_text(size = text_scale))
text_scale=12/ggplot2::.pt
gene_violin_plot =
ggplot(data = selected_gene_data_norm, mapping = aes(x = Genotype, y = Norm_expression))+
geom_violin()+
stat_pvalue_manual(stats, size = text_scale/3)+
ylab(yaxis_label)+
scale_y_continuous(expand = expansion(mult = c(0, 0.1)))+
stat_summary(mapping = aes(group = Genotype),
fun = median, fun.min = median, fun.max = median,
geom = "crossbar", width = 0.4)+
geom_point(position = position_jitter(seed = 1, width = 0.2), color="grey60")+
theme_white()+
theme(axis.text.x = element_text(size = text_scale),
axis.text.y = element_text(size = text_scale),
axis.title.x = element_text(size = text_scale),
axis.title.y = element_text(size = text_scale))
gene_violin_plot
runApp()
runApp()
data.seq_pared
data.seq = readRDS("Preprocessed_data/single_cell_seq_fold_changes_germarium_soma.RDS")
data.seq_pared = data.seq %>% relocate(Symbol, .after = FBGN)
data.seq_pared
data.seq = readRDS("Preprocessed_data/preprocessed_single_cell_seq_data_GC.RDS")
data.seq
data.seq = readRDS("Preprocessed_data/single_cell_seq_fold_changes_germarium_soma.RDS")
data.seq_pared = data.seq %>%
relocate(Symbol, .after = FBGN)
data.seq_pared
runApp()
runApp()
paste0("Selected_gene_expression_from_", input$SeqDataset, "of_GO_term", input$GO_term, ".csv")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data.seq = readRDS("Preprocessed_data/preprocessed_single_cell_seq_data_GC.RDS")
data.seq_pared = data.seq[c(1, 2, 3:11)] #extract columns used for plotting
data.seq_pared
names(data.seq_pared)
runApp()
runApp()
runApp()
data.seq = readRDS("Preprocessed_data/preprocessed_single_cell_seq_data_GC.RDS")
data.seq_pared = data.seq[c(1, 2, 3:11)] #extract columns used for plotting
column_names = c("FBGN",
"Symbol",
"GSC CB 2CC",
"4CC",
"8CC",
"16CC 2a 1",
"16CC 2a 2",
"16CC 2ab",
"16CC 2b",
"16CC 3",
"St2")
genotype_levels = c("GSC CB 2CC",
"4CC",
"8CC",
"16CC 2a 1",
"16CC 2a 2",
"16CC 2ab",
"16CC 2b",
"16CC 3",
"St2")
GO_Term_to_FBID = read_rds("Preprocessed_data/GO_Term_to_FBID.rds")
selected_GO_id = GO_term_tib$GOID[GO_term_tib$description == "ribosome"]
FBIDs_in_GO_id = GO_Term_to_FBID$ensembl_id[GO_Term_to_FBID$go_id == selected_GO_id]
selected_gene_data =
data.seq_pared %>%
set_names(column_names) %>%
filter(FBGN %in% FBIDs_in_GO_id) %>%
pivot_longer(cols = -c(FBGN, Symbol), names_to = "Genotype", values_to = "Mean_expression")
yaxis_label = expression("log normalized expression to GSC/CB/2CC")
selected_gene_data_norm = selected_gene_data %>%
dplyr::group_by(FBGN, Symbol) %>%
dplyr::mutate(Norm_expression = Mean_expression/Mean_expression[Genotype=="GSC CB 2CC"])
selected_gene_data_norm
stats = selected_gene_data_norm %>%
group_by(Genotype) %>%
rstatix::t_test(formula = Norm_expression~1, mu=1, p.adjust.method = "holm") %>% #bug here
add_xy_position(x = "Genotype", dodge = 0.8) %>%
mutate(Genotype = factor(Genotype, genotype_levels)) %>%   # Reorder stats to match data
arrange(Genotype) %>%
select(-c("x", "xmin", "xmax")) %>%           #workaround to apparent bug with add_xy_position order
bind_cols("x" = 1:length(genotype_levels),
"xmin" = 1:length(genotype_levels),
"xmax" = 1:length(genotype_levels))
selected_gene_data_norm %>%
group_by(Genotype) %>%
rstatix::t_test(formula = Norm_expression~1, mu=1, p.adjust.method = "holm")
View(selected_gene_data_norm_global)
View(selected_gene_data_norm)
selected_gene_data_norm = selected_gene_data %>%
dplyr::group_by(FBGN, Symbol) %>%
dplyr::mutate(Norm_expression = (Mean_expression+1)/(Mean_expression[Genotype=="GSC CB 2CC"]+1))
View(selected_gene_data_norm)
stats = selected_gene_data_norm %>%
group_by(Genotype) %>%
rstatix::t_test(formula = Norm_expression~1, mu=1, p.adjust.method = "holm") %>% #bug here
add_xy_position(x = "Genotype", dodge = 0.8) %>%
mutate(Genotype = factor(Genotype, genotype_levels)) %>%   # Reorder stats to match data
arrange(Genotype) %>%
select(-c("x", "xmin", "xmax")) %>%           #workaround to apparent bug with add_xy_position order
bind_cols("x" = 1:length(genotype_levels),
"xmin" = 1:length(genotype_levels),
"xmax" = 1:length(genotype_levels))
selected_gene_data_norm %>%
group_by(Genotype)
selected_gene_data_norm %>%
group_by(Genotype) %>%
rstatix::t_test(formula = Norm_expression~1, mu=1, p.adjust.method = "holm")
selected_gene_data_norm %>%
group_by(Genotype) %>%
filter(Genotype != "GSC CB 2CC")
selected_gene_data_norm %>%
group_by(Genotype) %>%
filter(Genotype != "GSC CB 2CC") %>%
rstatix::t_test(formula = Norm_expression~1, mu=1, p.adjust.method = "holm")
stats = selected_gene_data_norm %>%
group_by(Genotype) %>%
filter(Genotype != "GSC CB 2CC") %>%
rstatix::t_test(formula = Norm_expression~1, mu=1, p.adjust.method = "holm")
stats
rbind(stats, c("GSC CB 2CC", Norm_expression , 1, null model, NA, NA, NA, NA))
rbind(stats, c("GSC CB 2CC", Norm_expression , 1, "null model", NA, NA, NA, NA))
rbind(stats, c("GSC CB 2CC", "Norm_expression" , 1, "null model", NA, NA, NA, NA))
selected_gene_data_norm %>%
group_by(Genotype) %>%
filter(Genotype != "GSC CB 2CC") %>%
rstatix::t_test(formula = Norm_expression~1, mu=1, p.adjust.method = "holm") %>%
rbind(c("GSC CB 2CC", "Norm_expression" , 1, "null model", NA, NA, NA, NA))
stats = selected_gene_data_norm %>%
group_by(Genotype) %>%
filter(Genotype != "GSC CB 2CC") %>%
rstatix::t_test(formula = Norm_expression~1, mu=1, p.adjust.method = "holm") %>%
rbind(c("GSC CB 2CC", "Norm_expression" , 1, "null model", NA, NA, NA, NA)) %>%
add_xy_position(x = "Genotype", dodge = 0.8) %>%
mutate(Genotype = factor(Genotype, genotype_levels))
stats
stats = selected_gene_data_norm %>%
group_by(Genotype) %>%
filter(Genotype != "GSC CB 2CC") %>%
rstatix::t_test(formula = Norm_expression~1, mu=1, p.adjust.method = "holm") %>%
rbind(c("GSC CB 2CC", "Norm_expression" , 1, "null model", NA, NA, NA, NA)) %>%
add_xy_position(x = "Genotype", dodge = 0.8) %>%
mutate(Genotype = factor(Genotype, genotype_levels)) %>%   # Reorder stats to match data
arrange(Genotype) %>%
select(-c("x", "xmin", "xmax")) %>%           #workaround to apparent bug with add_xy_position order
bind_cols("x" = 1:length(genotype_levels),
"xmin" = 1:length(genotype_levels),
"xmax" = 1:length(genotype_levels))
stats
runApp()
runApp()
selected_gene_data_norm
stats
runApp()
runApp()
runApp()
mean(-0.061660457
0.254628896
)
mean(-0.061660457,0.254628896)
test = read_csv("/Downloads/Selected_gene_expression_from_Single_cell_seq_germline_of_GO_term_double-strand break repair.csv")
test
test %>% group_by(Genotype) %>% summarise(median(Norm_expression))
2^0.0738
2^0.0796
test = read_csv("/Downloads/Selected_gene_expression_from_Polysome_seq_of_GO_term_double-strand break repair.csv")
test %>% group_by(Genotype) %>% summarise(median(Norm_expression))
2^0.646
runApp()
2^0.267
2^(-0.0740)
-2^(0.0740)
runApp()
test = read_csv("/Downloads/Selected_gene_expression_from_Polysome_seq_of_GO_term_double-strand break repair.csv")
test %>% group_by(Genotype) %>% summarise(median(Norm_expression))
2^-0.0740
source("server_modules/violin_genes.R")
Figure3A1 = ovary_map(data_set_to_plot="Input_seq",
genes_by_GO="GO_term_selection",
GO_term="double-strand break repair",
gene_of_interest=NA,
normalization="each_gene",
12)
Figure3A1 = violin_genes(data_set_to_plot="Input_seq",
genes_by_GO="GO_term_selection",
GO_term="double-strand break repair",
gene_of_interest=NA,
normalization="each_gene",
12)
source("server_modules/violin_genes.R")
Figure3A1 = violin_genes(data_set_to_plot="Input_seq",
genes_by_GO="GO_term_selection",
GO_term="double-strand break repair",
gene_of_interest=NA,
normalization="each_gene",
12)
Figure3A1 = gene_violin(data_set_to_plot="Input_seq",
genes_by_GO="GO_term_selection",
GO_term="double-strand break repair",
gene_of_interest=NA,
normalization="each_gene",
12)
Figure3A1
setwd("ShinyExpresionMap")
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
# Figure3A1 = png_as_gg("Paper/Figures/Figure_3/RpS19b_input.png")
# Figure3A2 = png_as_gg("../Paper/Figures/Figure_3/RpS19b_SC_GC.png")
source("server_modules/violin_genes.R")
Figure3A1 = gene_violin(data_set_to_plot="Input_seq",
genes_by_GO="GO_term_selection",
GO_term="double-strand break repair",
gene_of_interest=NA,
normalization="each_gene",
12)
Figure3A2 = gene_violin(data_set_to_plot="Polysome_seq",
genes_by_GO="GO_term_selection",
GO_term="double-strand break repair",
gene_of_interest=NA,
normalization="each_gene",
12)
Fig3B = image_panel(path = "../Paper/Figures/placeholder.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("C", "C'", "C''"))
Fig3C = image_panel(path = "../Paper/Figures/placeholder.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"))
Figure3 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure3 = Figure3 %>%
fill_panel(Figure3A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure3A2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6) %>%
fill_panel(Fig3B, label = "", scaling = "none", panel_clip = "off", row = 6, column = 2:5) %>%
fill_panel(Fig3C, label = "", scaling = "none", panel_clip = "off", row = 7, column = 2:5)
Figure2
ggsave(filename = "Figure3.pdf", plot = Figure2, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
ggsave(filename = "Figure3.pdf", plot = Figure3, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
Figure3A1 = gene_violin(data_set_to_plot="Input_seq",
genes_by_GO="GO_term_selection",
GO_term="double-strand break repair",
gene_of_interest=NA,
normalization="each_gene",
12)+
theme(aspect.ratio = 0.3)
setwd("ShinyExpresionMap")
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
# Figure3A1 = png_as_gg("Paper/Figures/Figure_3/RpS19b_input.png")
# Figure3A2 = png_as_gg("../Paper/Figures/Figure_3/RpS19b_SC_GC.png")
source("server_modules/violin_genes.R")
Figure3A1 = gene_violin(data_set_to_plot="Input_seq",
genes_by_GO="GO_term_selection",
GO_term="double-strand break repair",
gene_of_interest=NA,
normalization="each_gene",
12)+
theme(aspect.ratio = 0.3)
Figure3A2 = gene_violin(data_set_to_plot="Polysome_seq",
genes_by_GO="GO_term_selection",
GO_term="double-strand break repair",
gene_of_interest=NA,
normalization="each_gene",
12)
Fig3B = image_panel(path = "../Paper/Figures/placeholder.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("C", "C'", "C''"))
Fig3C = image_panel(path = "../Paper/Figures/placeholder.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"))
Figure3 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure3 = Figure3 %>%
fill_panel(Figure3A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure3A2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6) %>%
fill_panel(Fig3B, label = "", scaling = "none", panel_clip = "off", row = 6, column = 2:5) %>%
fill_panel(Fig3C, label = "", scaling = "none", panel_clip = "off", row = 7, column = 2:5)
Figure3
ggsave(filename = "Figure3.pdf", plot = Figure3, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
source("server_modules/violin_genes.R")
Figure3A1 = gene_violin(data_set_to_plot="Input_seq",
genes_by_GO="GO_term_selection",
GO_term="double-strand break repair",
gene_of_interest=NA,
normalization="each_gene",
12)+
theme(aspect.ratio = 0.3)
Figure3A2 = gene_violin(data_set_to_plot="Polysome_seq",
genes_by_GO="GO_term_selection",
GO_term="double-strand break repair",
gene_of_interest=NA,
normalization="each_gene",
12)+
theme(aspect.ratio = 0.3)
Fig3B = image_panel(path = "../Paper/Figures/placeholder.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("C", "C'", "C''"))
Fig3C = image_panel(path = "../Paper/Figures/placeholder.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"))
Figure3 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure3 = Figure3 %>%
fill_panel(Figure3A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:5) %>%
fill_panel(Figure3A2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:5) %>%
fill_panel(Fig3B, label = "", scaling = "none", panel_clip = "off", row = 6, column = 2:5) %>%
fill_panel(Fig3C, label = "", scaling = "none", panel_clip = "off", row = 7, column = 2:5)
Figure3
ggsave(filename = "Figure3.pdf", plot = Figure3, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
setwd("ShinyExpresionMap")
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
# Figure3A1 = png_as_gg("Paper/Figures/Figure_3/RpS19b_input.png")
# Figure3A2 = png_as_gg("../Paper/Figures/Figure_3/RpS19b_SC_GC.png")
source("server_modules/violin_genes.R")
Figure3A1 = gene_violin(data_set_to_plot="Input_seq",
genes_by_GO="GO_term_selection",
GO_term="double-strand break repair",
gene_of_interest=NA,
normalization="each_gene",
12)
Figure3A2 = gene_violin(data_set_to_plot="Polysome_seq",
genes_by_GO="GO_term_selection",
GO_term="double-strand break repair",
gene_of_interest=NA,
normalization="each_gene",
12)
Fig3B = image_panel(path = "../Paper/Figures/placeholder.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("C", "C'", "C''"))
Fig3C = image_panel(path = "../Paper/Figures/placeholder.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"))
Figure3 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure3 = Figure3 %>%
fill_panel(Figure3A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure3A2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6) %>%
fill_panel(Fig3B, label = "", scaling = "none", panel_clip = "off", row = 6, column = 2:5) %>%
fill_panel(Fig3C, label = "", scaling = "none", panel_clip = "off", row = 7, column = 2:5)
Figure3
ggsave(filename = "Figure3.pdf", plot = Figure3, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
Figure3A1 = gene_violin(data_set_to_plot="Input_seq",
genes_by_GO="GO_term_selection",
GO_term="double-strand break repair",
gene_of_interest=NA,
normalization="each_gene",
12)+
expand_limits(y = c(-4, 2.5))
Figure3A1
setwd("ShinyExpresionMap")
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
# Figure3A1 = png_as_gg("Paper/Figures/Figure_3/RpS19b_input.png")
# Figure3A2 = png_as_gg("../Paper/Figures/Figure_3/RpS19b_SC_GC.png")
source("server_modules/violin_genes.R")
Figure3A1 = gene_violin(data_set_to_plot="Input_seq",
genes_by_GO="GO_term_selection",
GO_term="double-strand break repair",
gene_of_interest=NA,
normalization="each_gene",
12)+
expand_limits(y = c(-4, 2.5))
Figure3A2 = gene_violin(data_set_to_plot="Polysome_seq",
genes_by_GO="GO_term_selection",
GO_term="double-strand break repair",
gene_of_interest=NA,
normalization="each_gene",
12)+
expand_limits(y = c(-2, 3.5))
Fig3B = image_panel(path = "../Paper/Figures/placeholder.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("C", "C'", "C''"))
Fig3C = image_panel(path = "../Paper/Figures/placeholder.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"))
Figure3 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure3 = Figure3 %>%
fill_panel(Figure3A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure3A2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6) %>%
fill_panel(Fig3B, label = "", scaling = "none", panel_clip = "off", row = 6, column = 2:5) %>%
fill_panel(Fig3C, label = "", scaling = "none", panel_clip = "off", row = 7, column = 2:5)
Figure3
ggsave(filename = "Figure3.pdf", plot = Figure3, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
runApp()
runApp()
runApp()
