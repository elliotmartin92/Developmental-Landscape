source("server_modules/ovary_map.R")
Figure2SA1 = ovary_map(data_set_to_plot = "Polysome_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Figure2SA2 = ovary_map(data_set_to_plot = "Single_cell_seq_soma",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Figure2 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.0, rep(2.0694, 2), 2.0, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure2 = Figure2 %>%
fill_panel(Figure2SA1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure2SA2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6)
Figure2
ggsave(filename = "Supplemental_Figure2.pdf", plot = Figure2, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
setwd("ShinyExpresionMap")
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("server_modules/ovary_map.R")
Figure2SA1 = ovary_map(data_set_to_plot = "Polysome_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Figure2SA2 = ovary_map(data_set_to_plot = "Single_cell_seq_soma",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Figure2 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.0, rep(2.0694, 2), 2.0, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure2 = Figure2 %>%
fill_panel(Figure2SA1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure2SA2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6)
Figure2
ggsave(filename = "Supplemental_Figure2.pdf", plot = Figure2, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
setwd("ShinyExpresionMap")
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("server_modules/ovary_map.R")
Figure2SA1 = ovary_map(data_set_to_plot = "Polysome_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Figure2SA2 = ovary_map(data_set_to_plot = "Single_cell_seq_soma",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Figure2 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.0, rep(2.0694, 2), 2.0, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure2 = Figure2 %>%
fill_panel(Figure2SA1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure2SA2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6)
Figure2
ggsave(filename = "Supplemental_Figure2.pdf", plot = Figure2, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
setwd("ShinyExpresionMap")
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("server_modules/ovary_map.R")
Figure2SA1 = ovary_map(data_set_to_plot = "Polysome_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Figure2SA2 = ovary_map(data_set_to_plot = "Single_cell_seq_soma",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Figure2 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.0, rep(2.0694, 2), 2.0, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure2 = Figure2 %>%
fill_panel(Figure2SA1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure2SA2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6)
Figure2
ggsave(filename = "Supplemental_Figure2.pdf", plot = Figure2, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
setwd("ShinyExpresionMap")
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
# Figure2A1 = png_as_gg("Paper/Figures/Figure_2/RpS19b_input.png")
# Figure2A2 = png_as_gg("../Paper/Figures/Figure_2/RpS19b_SC_GC.png")
source("server_modules/ovary_map.R")
Figure2A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Figure2A2 = ovary_map(data_set_to_plot = "Single_cell_seq_germline",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Fig2B = image_panel(path = "../Paper/Figures/placeholder.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("C", "C'", "C''"))
Fig2C = image_panel(path = "../Paper/Figures/Figure_2/Control.Rps19b-GFP.40x.4_s3_5.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "RpS19b::GFP",
red_annotation = "1B1",
green_annotation = "GFP",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"))
Figure2 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure2 = Figure2 %>%
fill_panel(Figure2A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure2A2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6) %>%
fill_panel(Fig2B, label = "", scaling = "none", panel_clip = "off", row = 6, column = 2:5) %>%
fill_panel(Fig2C, label = "", scaling = "none", panel_clip = "off", row = 7, column = 2:5)
Figure2
ggsave(filename = "Figure2.pdf", plot = Figure2, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
setwd("ShinyExpresionMap")
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
# Figure2A1 = png_as_gg("Paper/Figures/Figure_2/RpS19b_input.png")
# Figure2A2 = png_as_gg("../Paper/Figures/Figure_2/RpS19b_SC_GC.png")
source("server_modules/ovary_map.R")
Figure2A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Figure2A2 = ovary_map(data_set_to_plot = "Single_cell_seq_germline",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Fig2B = image_panel(path = "../Paper/Figures/placeholder.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("C", "C'", "C''"))
Fig2C = image_panel(path = "../Paper/Figures/Figure_2/Control.Rps19b-GFP.40x.4_s3_5.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "RpS19b::GFP",
red_annotation = "1B1",
green_annotation = "GFP",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"))
Figure2 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure2 = Figure2 %>%
fill_panel(Figure2A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure2A2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6) %>%
fill_panel(Fig2B, label = "", scaling = "none", panel_clip = "off", row = 6, column = 2:5) %>%
fill_panel(Fig2C, label = "", scaling = "none", panel_clip = "off", row = 7, column = 2:5)
Figure2
ggsave(filename = "Figure2.pdf", plot = Figure2, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
setwd("ShinyExpresionMap")
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("server_modules/ovary_map.R")
Figure2SA1 = ovary_map(data_set_to_plot = "Polysome_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Figure2SA2 = ovary_map(data_set_to_plot = "Single_cell_seq_soma",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
graphic_to_generate = "map")
Figure2 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.0, rep(2.0694, 2), 2.0, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure2 = Figure2 %>%
fill_panel(Figure2SA1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure2SA2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6)
Figure2
ggsave(filename = "Supplemental_Figure2.pdf", plot = Figure2, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
runApp()
runApp()
runApp()
runApp()
setwd("ShinyExpresionMap")
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
# Figure2A1 = png_as_gg("Paper/Figures/Figure_2/RpS19b_input.png")
# Figure2A2 = png_as_gg("../Paper/Figures/Figure_2/RpS19b_SC_GC.png")
source("server_modules/ovary_map.R")
Figure2A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure2A2 = ovary_map(data_set_to_plot = "Single_cell_seq_germline",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Fig2B = image_panel(path = "../Paper/Figures/placeholder.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "Control",
green_annotation = "RpS19b mRNA",
blue_annotation = "Vasa",
label_letters = c("C", "C'", "C''"))
Fig2C = image_panel(path = "../Paper/Figures/Figure_2/Control.Rps19b-GFP.40x.4_s3_5.tif",
colors_to_return = c("green", "blue"),
genotype_annotation = "RpS19b::GFP",
red_annotation = "1B1",
green_annotation = "GFP",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"))
Figure2 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure2 = Figure2 %>%
fill_panel(Figure2A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure2A2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6) %>%
fill_panel(Fig2B, label = "", scaling = "none", panel_clip = "off", row = 6, column = 2:5) %>%
fill_panel(Fig2C, label = "", scaling = "none", panel_clip = "off", row = 7, column = 2:5)
Figure2
ggsave(filename = "Figure2.pdf", plot = Figure2, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
setwd("ShinyExpresionMap")
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("server_modules/ovary_map.R")
Figure2SA1 = ovary_map(data_set_to_plot = "Polysome_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure2SA2 = ovary_map(data_set_to_plot = "Single_cell_seq_soma",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure2 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.0, rep(2.0694, 2), 2.0, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure2 = Figure2 %>%
fill_panel(Figure2SA1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure2SA2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6)
Figure2
ggsave(filename = "Supplemental_Figure2.pdf", plot = Figure2, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
setwd("ShinyExpresionMap")
library(ggplot2)
library(multipanelfigure)
library(pdftools)
library(extrafont)
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/eps_as_gg.R")
source("../Paper/Helper_functions/png_as_gg.R")
# font_import(paths = c("C:/Users/Elliot/AppData/Local/Microsoft/Windows/Fonts/"), prompt = F)
Figure1S_A = eps_as_gg("../Paper/Figures/Figure_1/polysome_seq_diagram.eps")
Figure1S_C_paths = list.files(path = "../Paper/Figures/Figure_1/", pattern = "*heatmap.RDS.png", full.names = TRUE)
# Figure1_C = lapply(Figure1_C_paths, eps_as_gg)
Figure1S_C = lapply(Figure1_C_paths, png_as_gg)
Figure1S = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.0, rep(2.0694, 2), 2.0, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.2, 1.4837, 1.0, 0.1837, rep(1.1837, 5), 1.0, 0.4837, (11-8*(1.1837+0.025))/2-.2),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "Supplemental_Figure1")
Figure1S
Figure1S = Figure1S %>%
fill_panel(Figure1S_A, label = "A",
label_just = "bottom", scaling = "none", panel_clip = "off", row = 2:3, column = 3:6, family = "Helvetica") %>%
fill_panel(Figure1S_C[[3]], label = "B",
label_just = "bottom", scaling = "none", panel_clip = "off", row = 5:8, column = 3:4, family = "Helvetica") %>%
fill_panel(Figure1S_C[[4]], label = "B'",
label_just = "bottom", scaling = "none", panel_clip = "off", row = 5:8, column = 5:6, family = "Helvetica")
Figure1S
ggsave(filename = "Supplemental_Figure1.pdf", plot = Figure1S, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
setwd("ShinyExpresionMap")
library(ggplot2)
library(multipanelfigure)
library(pdftools)
library(extrafont)
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/eps_as_gg.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("../Paper/Helper_functions/export_plotly2SVG.R")
# font_import(paths = c("C:/Users/Elliot/AppData/Local/Microsoft/Windows/Fonts/"), prompt = F)
source("server_modules/ovary_map_cartoon.R")
Figure1_A1 =  ovary_map_cartoon(text_scale = 12/ggplot2::.pt)+
theme(aspect.ratio = .28,
plot.margin = margin(0.0, 0.0, 0.1, 0.0, unit = "in"))
Figure1_B1 = eps_as_gg("../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps")
plotly_files = c("Preprocessed_data/Input_seq_plotly_heatmap.RDS",
"Preprocessed_data/Polysome_seq_plotly_heatmap.RDS",
"Preprocessed_data/Single_cell_seq_germline_plotly_heatmap.RDS",
"Preprocessed_data/Single_cell_seq_soma_plotly_heatmap.RDS")
# plotly_file_names = lapply(plotly_files, basename)
# input_plotlys = lapply(plotly_files, readRDS)
# mapply(export_plotly2SVG, input_plotlys, filename = plotly_file_names,
#        parent_path = "../Paper/Figures/Figure_1/", width = 300, height = 300)
# had to manually adust svgs and export as png
Figure1_C_paths = list.files(path = "../Paper/Figures/Figure_1/", pattern = "*heatmap.RDS.png", full.names = TRUE)
# Figure1_C = lapply(Figure1_C_paths, eps_as_gg)
Figure1_C = lapply(Figure1_C_paths, png_as_gg)
Figure1 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.0, rep(2.0694, 2), 2.0, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.2, 1.4837, rep(1.1837, 6), 1.0, 0.4837, (11-8*(1.1837+0.025))/2-.2),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure1
Figure1 = Figure1 %>%
fill_panel(Figure1_A1, label = "A",
label_just = "bottom", scaling = "none", panel_clip = "off", row = 2:3, column = 3:6, family = "Helvetica") %>%
fill_panel(Figure1_B1, label = "B",
label_just = "bottom", scaling = "none", panel_clip = "off", row = 4:6, column = 3:6, family = "Helvetica") %>%
fill_panel(Figure1_C[[1]], label = "C",
label_just = "bottom", scaling = "none", panel_clip = "off", row = 7:10, column = 3:4, family = "Helvetica") %>%
fill_panel(Figure1_C[[2]], label = "C'",
label_just = "bottom", scaling = "none", panel_clip = "off", row = 7:10, column = 5:6, family = "Helvetica")
Figure1
ggsave(filename = "Figure1.pdf", plot = Figure1, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
setwd("ShinyExpresionMap")
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("server_modules/ovary_map.R")
Figure2SA1 = ovary_map(data_set_to_plot = "Polysome_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure2SA2 = ovary_map(data_set_to_plot = "Single_cell_seq_soma",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
gene_of_interest = "RpS19b",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure2 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure2
Figure2 = Figure2 %>%
fill_panel(Figure2SA1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure2SA2, label = "B", scaling = "fit", panel_clip = "on", row = 4:5, column = 3:6)
Figure2
ggsave(filename = "Supplemental_Figure2.pdf", plot = Figure2, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
runApp()
runApp()
runApp()
data.seq = readRDS("Preprocessed_data/preprocessed_RNA_seq_data.RDS")
selected_gene_data_norm
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(knitr)
library(gginnards)
library(captioner)
fig_nums <- captioner()
if (pages_to_report == "DevProg" || pages_to_report == "all" & exists("ovary_map_dataset_plotted")) {
distPlot_to_display = TRUE
if (input$cartoon_toggle == FALSE) {
distPlot_cartoon_to_display = TRUE
ovary_map_text_raw =
figure_legends_table %>%
filter(plot == "ovary_map") %>%
filter(dataset == "Cartoon") %>%
pull(text)
ovary_map_text = ovary_map_text_raw
fig_nums("ovary_map_figure_legend", ovary_map_text)
}else{
distPlot_cartoon_to_display = FALSE
distPlot_legend_to_display = TRUE
ovary_map_text_raw =
figure_legends_table %>%
filter(plot == "ovary_map") %>%
filter(dataset == ovary_map_dataset_plotted) %>%
pull(text)
ovary_map_text = str_replace(ovary_map_text_raw, "input_gene_of_interest", input$gene_of_interest)
fig_nums("ovary_map_figure_legend", ovary_map_text)
}
}else{
distPlot_legend_to_display = FALSE
distPlot_to_display = FALSE
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
download_Env
.download_Env
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data.seq
selected_gene_data_norm
data.seq = readRDS("Preprocessed_data/preprocessed_RNA_seq_data.RDS")
data.seq = readRDS("Preprocessed_data/preprocessed_RNA_seq_data.RDS")
data.seq
data.seq = readRDS("Preprocessed_data/preprocessed_single_cell_seq_data_GC.RDS")
data.seq
data.seq = readRDS("Preprocessed_data/preprocessed_RNA_seq_data.RDS")
data.seq
data.seq = readRDS("Preprocessed_data/preprocessed_polysome_seq_data.RDS")
data.seq_pared = data.seq[c(1, 3:6)] #extract columns used for plotting
data.seq
data.seq_pared = data.seq[c(1, "Symbol", 3:6)] #extract columns used for plotting
data.seq = readRDS("Preprocessed_data/preprocessed_polysome_seq_data.RDS")
data.seq_pared = data.seq[c(1, "Symbol", 3:6)] #extract columns used for plotting
data.seq_pared = data.seq[c( "Symbol")] #extract columns used for plotting
data.seq_pared
data.seq_pared = data.seq[c(1, "Symbol")] #extract columns used for plotting
data.seq
names(data.seq)
names(data.seq)=="Symbol"
data.seq[names(data.seq)=="Symbol"]
names(data.seq)=="Symbol"
1:length(names(data.seq))[names(data.seq)=="Symbol"]
1:length(names(data.seq))
1:length(names(data.seq))[1]
1:length(names(data.seq))[[1]]
1:length(names(data.seq))[[2]]
1:length(names(data.seq))
1:length(names(data.seq))[1][1]
1:length(names(data.seq))[1][1][1]
1:length(names(data.seq))
data.seq[names(data.seq)=="Symbol"]
which(colnames(data.seq) == "Symbol")
data.seq = readRDS("Preprocessed_data/preprocessed_single_cell_seq_data_GC.RDS")
which(colnames(data.seq) == "Symbol")
data.seq = readRDS("Preprocessed_data/preprocessed_single_cell_seq_data_germarium_soma.RDS")
which(colnames(data.seq) == "Symbol")
runApp()
