Figure4A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "ord",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure4A2 = ovary_map(data_set_to_plot = "Polysome_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "ord",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure4B = image_panel(path = "../Paper/Figures/Figure_4/img2_24_RGB ps.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 2.czi",
colors_to_return = c("green", "red"),
genotype_annotation = "Ord::GFP",
green_annotation = "Ord::GFP",
red_annotation = "ord::GFP mRNA",
blue_annotation = "DAPI",
label_letters = c("B", "B'", "B''"),
scale_bar_length = 20)
Figure4 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c(0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 1.1837, 1.1837, (11-8*(1.1837+0.025))-0.25-0.25-0.25),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "Figure4")
Figure4
Figure4 = Figure4 %>%
fill_panel(Figure4A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure4A2, label = "B", scaling = "fit", panel_clip = "on", row = 5:6, column = 3:6) %>%
fill_panel(Figure4B, label = "", scaling = "none", panel_clip = "off", row = 8, column = 2:5)
Figure4
ggsave(filename = "Figure4.pdf", plot = Figure4, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
.3^2
.6^2
0^2
1^2
Figure4B = image_panel(path = "../Paper/Figures/Figure_4/img2_24_RGB ps.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 2.czi",
colors_to_return = c("red", "green"),
genotype_annotation = "ord::GFP",
green_annotation = "GFP",
red_annotation = "gfp mRNA",
blue_annotation = "DAPI",
label_letters = c("B", "B'", "B''"),
scale_bar_length = 20)
Figure4 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c(0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 1.1837, 1.1837, (11-8*(1.1837+0.025))-0.25-0.25-0.25),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "Figure4")
Figure4
Figure4 = Figure4 %>%
fill_panel(Figure4A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure4A2, label = "B", scaling = "fit", panel_clip = "on", row = 5:6, column = 3:6) %>%
fill_panel(Figure4B, label = "", scaling = "none", panel_clip = "off", row = 8, column = 2:5)
Figure4
ggsave(filename = "Figure4.pdf", plot = Figure4, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
Figure4B = image_panel(path = "../Paper/Figures/Figure_4/img2_24_RGB ps.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 2.czi",
colors_to_return = c("red", "green"),
genotype_annotation = "ord::GFP",
green_annotation = "GFP",
red_annotation = "gfp mRNA",
blue_annotation = "DAPI",
label_letters = c("C", "C'", "C''"),
scale_bar_length = 20)
Figure4 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c(0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 1.1837, 1.1837, (11-8*(1.1837+0.025))-0.25-0.25-0.25),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "Figure4")
Figure4
Figure4 = Figure4 %>%
fill_panel(Figure4A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure4A2, label = "B", scaling = "fit", panel_clip = "on", row = 5:6, column = 3:6) %>%
fill_panel(Figure4B, label = "", scaling = "none", panel_clip = "off", row = 8, column = 2:5)
Figure4
ggsave(filename = "Figure4.pdf", plot = Figure4, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
2^.3
tlmgr_install
if (is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
setwd("ShinyExpresionMap/")
}else if (!is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
}else{
errorCondition("WD is invalid")
}
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("server_modules/ggplotWhiteTheme.R")
source("server_modules/violin_genes.R")
Figure4A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "ord",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure4B = ovary_map(data_set_to_plot = "Polysome_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "ord",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure4C = image_panel(path = "../Paper/Figures/Figure_4/img2_24_RGB ps.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 2.czi",
colors_to_return = c("red", "green"),
genotype_annotation = "ord::GFP",
green_annotation = "GFP",
red_annotation = "gfp mRNA",
blue_annotation = "DAPI",
label_letters = c("C", "C'", "C''"),
scale_bar_length = 20)
Figure4D = image_panel(path = "../Paper/Figures/Figure_4/control_C3Gprot_C3Grna_Vasa_11_s7.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 11.czi",
colors_to_return = c("red", "green"),
genotype_annotation = "Control",
green_annotation = "C(3)G",
red_annotation = "c(3)G mRNA",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"),
scale_bar_length = 20)
Figure4 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c(0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 1.1837, 1.1837, (11-8*(1.1837+0.025))-0.25-0.25-0.25),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "Figure4")
Figure4
Figure4 = Figure4 %>%
fill_panel(Figure4A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure4B, label = "B", scaling = "fit", panel_clip = "on", row = 5:6, column = 3:6) %>%
fill_panel(Figure4C, label = "", scaling = "none", panel_clip = "off", row = 8, column = 2:5) %>%
fill_panel(Figure4D, label = "", scaling = "none", panel_clip = "off", row = 9, column = 2:5)
Figure4
ggsave(filename = "Figure4.pdf", plot = Figure4, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
source("../Paper/Helper_functions/image_panel.R")
Figure4
Sys.setenv(RETICULATE_PYTHON = "D:/R_projects/Developmental-Landscape/renv/python/condaenvs/renv-python/")
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("server_modules/ggplotWhiteTheme.R")
source("server_modules/violin_genes.R")
library(tidyverse)
source("server_modules/violin_genes.R")
Figure4A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "ord",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
source("server_modules/ovary_map.R")
library(df)
library(sf)
source("server_modules/ovary_map.R")
Figure4A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "ord",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure4B = ovary_map(data_set_to_plot = "Polysome_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "ord",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure4C = image_panel(path = "../Paper/Figures/Figure_4/img2_24_RGB ps.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 2.czi",
colors_to_return = c("red", "green"),
genotype_annotation = "ord::GFP",
green_annotation = "GFP",
red_annotation = "gfp mRNA",
blue_annotation = "DAPI",
label_letters = c("C", "C'", "C''"),
scale_bar_length = 20)
Figure4D = image_panel(path = "../Paper/Figures/Figure_4/control_C3Gprot_C3Grna_Vasa_11_s7.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 11.czi",
colors_to_return = c("red", "green"),
genotype_annotation = "Control",
green_annotation = "C(3)G",
red_annotation = "c(3)G mRNA",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"),
scale_bar_length = 20)
Figure4 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c(0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 1.1837, 1.1837, (11-8*(1.1837+0.025))-0.25-0.25-0.25),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "Figure4")
Figure4
Figure4 = Figure4 %>%
fill_panel(Figure4A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure4B, label = "B", scaling = "fit", panel_clip = "on", row = 5:6, column = 3:6) %>%
fill_panel(Figure4C, label = "", scaling = "none", panel_clip = "off", row = 8, column = 2:5) %>%
fill_panel(Figure4D, label = "", scaling = "none", panel_clip = "off", row = 9, column = 2:5)
Figure4
ggsave(filename = "Figure4.pdf", plot = Figure4, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
Figure4D = image_panel(path = "../Paper/Figures/Figure_4/control_C3Gprot_C3Grna_Vasa_11_s7.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 11.czi",
colors_to_return = c("red", "green"),
genotype_annotation = "Control",
green_annotation = "C(3)G",
red_annotation = "c(3)G mRNA",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"),
scale_bar_length = 20)
Figure4 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c(0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 1.1837, 1.1837, (11-8*(1.1837+0.025))-0.25-0.25-0.25),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "Figure4")
Figure4
Figure4 = Figure4 %>%
fill_panel(Figure4A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure4B, label = "B", scaling = "fit", panel_clip = "on", row = 5:6, column = 3:6) %>%
fill_panel(Figure4C, label = "", scaling = "none", panel_clip = "off", row = 8, column = 2:5) %>%
fill_panel(Figure4D, label = "", scaling = "none", panel_clip = "off", row = 9, column = 2:5)
Figure4
Figure4A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "ord",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
if (is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
setwd("ShinyExpresionMap/")
}else if (!is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
}else{
errorCondition("WD is invalid")
}
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("server_modules/ggplotWhiteTheme.R")
source("server_modules/violin_genes.R")
source("server_modules/ovary_map.R")
Figure4A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "ord",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure4B = ovary_map(data_set_to_plot = "Polysome_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "ord",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure4C = image_panel(path = "../Paper/Figures/Figure_4/img2_24_RGB ps.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 2.czi",
colors_to_return = c("red", "green"),
genotype_annotation = "ord::GFP",
green_annotation = "GFP",
red_annotation = "gfp mRNA",
blue_annotation = "DAPI",
label_letters = c("C", "C'", "C''"),
scale_bar_length = 20)
Figure4D = image_panel(path = "../Paper/Figures/Figure_4/control_C3Gprot_C3Grna_Vasa_11_s7.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 11.czi",
colors_to_return = c("red", "green"),
genotype_annotation = "Control",
green_annotation = "C(3)G",
red_annotation = "c(3)G mRNA",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"),
scale_bar_length = 20)
Figure4 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c(0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 1.1837, 1.1837, (11-8*(1.1837+0.025))-0.25-0.25-0.25),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "Figure4")
Figure4
Figure4 = Figure4 %>%
fill_panel(Figure4A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure4B, label = "B", scaling = "fit", panel_clip = "on", row = 5:6, column = 3:6) %>%
fill_panel(Figure4C, label = "", scaling = "none", panel_clip = "off", row = 8, column = 2:5) %>%
fill_panel(Figure4D, label = "", scaling = "none", panel_clip = "off", row = 9, column = 2:5)
Figure4
ggsave(filename = "Figure4.pdf", plot = Figure4, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
if (is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
setwd("ShinyExpresionMap")
}else if (strsplit(getwd(), "Developmental-Landscape")[[1]][2] == "/ShinyExpresionMap") {
warning("WD already set to /ShinyExpresionMap")
}else{
errorCondition("WD is invalid")
}
source("server_modules/ggplotWhiteTheme.R")
source("server_modules/violin_genes.R")
source("server_modules/ovary_map.R")
FigureS4A = gene_violin(data_set_to_plot="Input_seq",
genes_by_GO="GO_term_selection",
GO_term = "meiosis I",
normalization="each_gene",
text_scale = 12)+
expand_limits(y = c(-4, 3))+
ggtitle("Meiosis I - Input")+
theme(aspect.ratio = 0.2,
plot.title = element_text(size = 12, margin = margin(0,0,4,0)))
FigureS4B = gene_violin(data_set_to_plot="Polysome_seq",
genes_by_GO="GO_term_selection",
GO_term = "meiosis I",
normalization="each_gene",
text_scale = 12)+
expand_limits(y = c(-4, 3))+
ggtitle("Meiosis I - Polysome")+
theme(aspect.ratio = 0.2,
plot.title = element_text(size = 12, margin = margin(0,0,4,0)))
FigureS4C = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "c(3)G",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
FigureS4D = ovary_map(data_set_to_plot = "Polysome_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "c(3)G",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
FigureS4 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c(0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, (11-8*(1.1837+0.025))-0.25-0.25-0.25-0.25),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "Figure4")
FigureS4
FigureS4 = FigureS4 %>%
fill_panel(FigureS4A, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:5) %>%
fill_panel(FigureS4B, label = "B", scaling = "fit", panel_clip = "on", row = 5:6, column = 3:5) %>%
fill_panel(FigureS4C, label = "C", scaling = "fit", panel_clip = "on", row = 8:9, column = 3:6) %>%
fill_panel(FigureS4D, label = "D", scaling = "fit", panel_clip = "on", row = 11:12, column = 3:6)
FigureS4
ggsave(filename = "Supplemental_Figure4.pdf", plot = FigureS4, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
shiny::runApp()
if (is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
setwd("ShinyExpresionMap")
}else if (strsplit(getwd(), "Developmental-Landscape")[[1]][2] == "/ShinyExpresionMap") {
warning("WD already set to /ShinyExpresionMap")
}else{
errorCondition("WD is invalid")
}
source("server_modules/ggplotWhiteTheme.R")
source("server_modules/violin_genes.R")
source("server_modules/ovary_map.R")
FigureS4A = gene_violin(data_set_to_plot="Input_seq",
genes_by_GO="GO_term_selection",
GO_term = "meiosis I",
normalization="each_gene",
text_scale = 12)+
expand_limits(y = c(-4, 3))+
ggtitle("Meiosis I - Input")+
theme(aspect.ratio = 0.2,
plot.title = element_text(size = 12, margin = margin(0,0,4,0)))
FigureS4B = gene_violin(data_set_to_plot="Polysome_seq",
genes_by_GO="GO_term_selection",
GO_term = "meiosis I",
normalization="each_gene",
text_scale = 12)+
expand_limits(y = c(-4, 3))+
ggtitle("Meiosis I - Polysome")+
theme(aspect.ratio = 0.2,
plot.title = element_text(size = 12, margin = margin(0,0,4,0)))
FigureS4C = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "c(3)G",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
FigureS4D = ovary_map(data_set_to_plot = "Polysome_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "c(3)G",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
FigureS4 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c(0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, (11-8*(1.1837+0.025))-0.25-0.25-0.25-0.25),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "Figure4")
FigureS4
FigureS4 = FigureS4 %>%
fill_panel(FigureS4A, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:5) %>%
fill_panel(FigureS4B, label = "B", scaling = "fit", panel_clip = "on", row = 5:6, column = 3:5) %>%
fill_panel(FigureS4C, label = "C", scaling = "fit", panel_clip = "on", row = 8:9, column = 3:6) %>%
fill_panel(FigureS4D, label = "D", scaling = "fit", panel_clip = "on", row = 11:12, column = 3:6)
FigureS4
ggsave(filename = "Supplemental_Figure4.pdf", plot = FigureS4, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
Figure4D = image_panel(path = "../Paper/Figures/Figure_4/control_C3Gprot_C3Grna_Vasa_11_s6_8.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 11.czi",
colors_to_return = c("red", "green"),
genotype_annotation = "Control",
green_annotation = "C(3)G",
red_annotation = "c(3)G mRNA",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"),
scale_bar_length = 20)
if (is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
setwd("ShinyExpresionMap/")
}else if (!is.na(strsplit(getwd(), "Developmental-Landscape")[[1]][2])) {
}else{
errorCondition("WD is invalid")
}
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/png_as_gg.R")
source("server_modules/ggplotWhiteTheme.R")
source("server_modules/violin_genes.R")
source("server_modules/ovary_map.R")
Figure4A1 = ovary_map(data_set_to_plot = "Input_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "ord",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure4B = ovary_map(data_set_to_plot = "Polysome_seq",
gene_name_format = "Symbol",
displayTPM = TRUE,
display_stage_labels = TRUE,
display_title = TRUE,
gene_of_interest = "ord",
text_scale = 10/ggplot2::.pt,
map_line_width = 0.5,
graphic_to_generate = "map")
Figure4C = image_panel(path = "../Paper/Figures/Figure_4/img2_24_RGB ps.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 2.czi",
colors_to_return = c("red", "green"),
genotype_annotation = "ord::GFP",
green_annotation = "GFP",
red_annotation = "gfp mRNA",
blue_annotation = "DAPI",
label_letters = c("C", "C'", "C''"),
scale_bar_length = 20)
Figure4D = image_panel(path = "../Paper/Figures/Figure_4/control_C3Gprot_C3Grna_Vasa_11_s6_8.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 11.czi",
colors_to_return = c("red", "green"),
genotype_annotation = "Control",
green_annotation = "C(3)G",
red_annotation = "c(3)G mRNA",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"),
scale_bar_length = 20)
Figure4 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.025, rep(2.0694+0.025, 2), 2.025, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c(0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 0.25, 1.1837, 1.1837, 1.1837, 1.1837, (11-8*(1.1837+0.025))-0.25-0.25-0.25),
row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "Figure4")
Figure4
Figure4 = Figure4 %>%
fill_panel(Figure4A1, label = "A", scaling = "fit", panel_clip = "on", row = 2:3, column = 3:6) %>%
fill_panel(Figure4B, label = "B", scaling = "fit", panel_clip = "on", row = 5:6, column = 3:6) %>%
fill_panel(Figure4C, label = "", scaling = "none", panel_clip = "off", row = 8, column = 2:5) %>%
fill_panel(Figure4D, label = "", scaling = "none", panel_clip = "off", row = 9, column = 2:5)
Figure4
ggsave(filename = "Figure4.pdf", plot = Figure4, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
Figure4D = image_panel(path = "../Paper/Figures/Figure_4/control_C3Gprot_C3Grna_Vasa_14_s7_9.tif",
path_to_czi = "../Paper/Figures/Figure_4/Image 11.czi",
colors_to_return = c("red", "green"),
genotype_annotation = "Control",
green_annotation = "C(3)G",
red_annotation = "c(3)G mRNA",
blue_annotation = "Vasa",
label_letters = c("D", "D'", "D''"),
scale_bar_length = 20)
Figure4D
install.packages("captioner")
library(captioner)
shiny::runApp('ShinyExpresionMap')
runApp('ShinyExpresionMap')
runApp('ShinyExpresionMap')
runApp('ShinyExpresionMap')
runApp('ShinyExpresionMap')
