unlist()
bounding_region_3 =
group_geometry %>%
filter(cell_type %in% c("16CC_3")) %>%
summarise(geometry = st_union(geometry)) %>%
summarise(bbox=st_bbox_by_feature(geometry)) %>%
pull(bbox) %>%
unlist()
group_geometry_bounding = tibble(cell_type=group_geometry$cell_type,
x=map_dbl(group_geometry$centroid, 1),
y=map_dbl(group_geometry$centroid, 2),
bbox=st_bbox_by_feature(group_geometry$geometry))
merge_plot$color = factor(merge_plot$color, levels = c("Black", "GSC", "CB", "Early_cyst", "Late_cyst", "soma", "White", "line"))
merge_plot$color[merge_plot$cell_type=="GSC"] = "GSC"
merge_plot$color[merge_plot$cell_type=="CB"] = "CB"
merge_plot$color[merge_plot$cell_type=="2CC"] = "Early_cyst"
merge_plot$color[merge_plot$cell_type=="4CC"] = "Early_cyst"
merge_plot$color[merge_plot$cell_type=="8CC"] = "Early_cyst"
merge_plot$color[merge_plot$cell_type=="16CC_2A1"] = "Late_cyst"
merge_plot$color[merge_plot$cell_type=="16CC_2A2"] = "Late_cyst"
merge_plot$color[merge_plot$cell_type=="16CC_2AB"] = "Late_cyst"
merge_plot$color[merge_plot$cell_type=="16CC_2B"] = "Late_cyst"
merge_plot$color[merge_plot$cell_type=="16CC_3"] = "Late_cyst"
merge_plot$color[merge_plot$cell_type=="ST2"] = "Late_cyst"
merge_plot$color[merge_plot$region=="soma"] = "soma"
dist_pl = merge_plot %>%
st_as_sf() %>%
arrange(region) %>%
mutate(region_index = row_number()) %>%
mutate(color = color %>% forcats::fct_reorder(-region_index)) %>%
filter(region != "background") %>%
ggplot()+
geom_sf(aes(geometry=geometry, fill=color), color = "grey50")+
scale_fill_manual(values = pal, name="Binned Expression")+
theme_void()+
theme(panel.grid.major = element_line(colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
panel.border = element_rect(fill = "transparent", colour = "transparent"),
legend.position = "none")
shape_centroids = st_centroid(shape)
shape_ymin = st_bbox(shape$geometry)[[2]]
shape_ymax = st_bbox(shape$geometry)[[4]]
shape.x.y = data.frame(x=map_dbl(shape_centroids$geometry, 1), y=map_dbl(shape_centroids$geometry, 2), shape$cell_type)
dist_pl = dist_pl+
annotate("text", label="GSC", x=shape.x.y[1,1], y=shape_ymin-0.30, size=text_scale)+
annotate("text", label="CB", x=shape.x.y[3,1], y=shape_ymax+0.16, size=text_scale)+
annotate("text", label="2-CC", x=shape.x.y[4,1], y=shape_ymin-0.30, size=text_scale)+
annotate("text", label="4-CC", x=shape.x.y[5,1], y=shape_ymax+0.16, size=text_scale)+
annotate("text", label="8-CC", x=shape.x.y[6,1], y=shape_ymin-0.30, size=text_scale)+
annotate("text", label="16-CC", x=(bounding_16CC[1]+bounding_16CC[3])/2, y=shape_ymin-0.30, size=text_scale)+
annotate("text", label="Stage 2\nEgg Chamber", x=shape.x.y[12,1], y=shape_ymin-0.40, size=text_scale)+
annotate("text", label="Region 1", x=(bounding_region_1[1]+bounding_region_1[3])/2, y=shape_ymax+0.5, size=text_scale)+
annotate("text", label="Region 2a", x=(bounding_region_2a[1]+bounding_region_2a[3])/2, y=shape_ymax+0.5, size=text_scale)+
annotate("text", label="Region 2b", x=(bounding_region_2b[1]+bounding_region_2b[3])/2, y=shape_ymax+0.5, size=text_scale)+
annotate("text", label="Region 3", x=(bounding_region_3[1]+bounding_region_3[3])/2, y=shape_ymax+0.5, size=text_scale)+
# GSC
annotate("segment", x=shape.x.y[1,1], xend=shape.x.y[1,1],
y=st_bbox(shape$geometry[1])[[2]], yend=shape_ymin-0.17)+
# CB
annotate("segment", x=shape.x.y[3,1], xend=shape.x.y[3,1],
y=st_bbox(shape$geometry[3])[[4]], yend=shape_ymax+0.03)+
# 2CC
annotate("segment", x=shape.x.y[4,1], xend=shape.x.y[4,1],
y=st_bbox(shape$geometry[4])[[2]], yend=shape_ymin-0.17)+
# 4CC
annotate("segment", x=shape.x.y[5,1], xend=shape.x.y[5,1],
y=st_bbox(shape$geometry[5])[[4]], yend=shape_ymax+0.03)+
# 8CC
annotate("segment", x=shape.x.y[6,1], xend=shape.x.y[6,1],
y=st_bbox(shape$geometry[6])[[2]], yend=shape_ymin-0.17)+
# 16CC
annotate("segment", x=bounding_16CC[1], xend=bounding_16CC[3], y=shape_ymin-.17, yend=shape_ymin-0.17)+
# ST2
annotate("segment", x=shape.x.y[12,1], xend=shape.x.y[12,1],
y=st_bbox(shape$geometry[12])[[2]], yend=shape_ymin-0.17)+
# region 1
annotate("segment", x=bounding_region_1[1], xend=bounding_region_1[3], y=shape_ymax+0.30, yend=shape_ymax+0.30)+
# region 2a
annotate("segment", x=bounding_region_2a[1], xend=bounding_region_2a[3], y=shape_ymax+0.30, yend=shape_ymax+0.30)+
# region 2b
annotate("segment", x=bounding_region_2b[1], xend=bounding_region_2b[3], y=shape_ymax+0.30, yend=shape_ymax+0.30)+
# region 3
annotate("segment", x=bounding_region_3[1], xend=bounding_region_3[3], y=shape_ymax+0.30, yend=shape_ymax+0.30)
dist_pl_rmd <<- dist_pl
ovary_map_cartoon <- function(text_scale) {
merge_plot = readRDS("Preprocessed_data/preprocessed_sf.RDS") #data to populate shape file for distPlot
shape = readRDS("Preprocessed_data/preloaded_shape.RDS") #shape file for distPlot
pal <- c(
"Black" = "Black",
"GSC" = "#7BC260",
"CB" = "#83D2E7",
"Early_cyst" = "#4E8CCA",
"Late_cyst" = "#7BC260",
"soma" = "#FFD2ED",
"White" = "White",
"line" = "Black")
group_geometry = shape %>%
group_by(cell_type) %>%
summarise(geometry = st_union(geometry)) %>%
mutate(centroid = st_centroid(geometry))
st_bbox_by_feature = function(x) {
x = st_geometry(x)
f <- function(y) (st_bbox(y))
lapply(x, f)
}
bounding_16CC =
group_geometry %>%
filter(grepl(pattern = "16CC", cell_type)) %>%
summarise(geometry = st_union(geometry)) %>%
summarise(bbox=st_bbox_by_feature(geometry)) %>%
pull(bbox) %>%
unlist()
bounding_region_1 =
group_geometry %>%
filter(cell_type %in% c("GSC", "CB", "2CC", "4CC")) %>%
summarise(geometry = st_union(geometry)) %>%
summarise(bbox=st_bbox_by_feature(geometry)) %>%
pull(bbox) %>%
unlist()
bounding_region_2a =
group_geometry %>%
filter(cell_type %in% c("16CC_2A1", "16CC_2A2")) %>%
summarise(geometry = st_union(geometry)) %>%
summarise(bbox=st_bbox_by_feature(geometry)) %>%
pull(bbox) %>%
unlist()
bounding_region_2b =
group_geometry %>%
filter(cell_type %in% c("16CC_2B")) %>%
summarise(geometry = st_union(geometry)) %>%
summarise(bbox=st_bbox_by_feature(geometry)) %>%
pull(bbox) %>%
unlist()
bounding_region_3 =
group_geometry %>%
filter(cell_type %in% c("16CC_3")) %>%
summarise(geometry = st_union(geometry)) %>%
summarise(bbox=st_bbox_by_feature(geometry)) %>%
pull(bbox) %>%
unlist()
group_geometry_bounding = tibble(cell_type=group_geometry$cell_type,
x=map_dbl(group_geometry$centroid, 1),
y=map_dbl(group_geometry$centroid, 2),
bbox=st_bbox_by_feature(group_geometry$geometry))
merge_plot$color = factor(merge_plot$color, levels = c("Black", "GSC", "CB", "Early_cyst", "Late_cyst", "soma", "White", "line"))
merge_plot$color[merge_plot$cell_type=="GSC"] = "GSC"
merge_plot$color[merge_plot$cell_type=="CB"] = "CB"
merge_plot$color[merge_plot$cell_type=="2CC"] = "Early_cyst"
merge_plot$color[merge_plot$cell_type=="4CC"] = "Early_cyst"
merge_plot$color[merge_plot$cell_type=="8CC"] = "Early_cyst"
merge_plot$color[merge_plot$cell_type=="16CC_2A1"] = "Late_cyst"
merge_plot$color[merge_plot$cell_type=="16CC_2A2"] = "Late_cyst"
merge_plot$color[merge_plot$cell_type=="16CC_2AB"] = "Late_cyst"
merge_plot$color[merge_plot$cell_type=="16CC_2B"] = "Late_cyst"
merge_plot$color[merge_plot$cell_type=="16CC_3"] = "Late_cyst"
merge_plot$color[merge_plot$cell_type=="ST2"] = "Late_cyst"
merge_plot$color[merge_plot$region=="soma"] = "soma"
dist_pl = merge_plot %>%
st_as_sf() %>%
arrange(region) %>%
mutate(region_index = row_number()) %>%
mutate(color = color %>% forcats::fct_reorder(-region_index)) %>%
filter(region != "background") %>%
ggplot()+
geom_sf(aes(geometry=geometry, fill=color), color = "grey50")+
scale_fill_manual(values = pal, name="Binned Expression")+
theme_void()+
theme(panel.grid.major = element_line(colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
panel.border = element_rect(fill = "transparent", colour = "transparent"),
legend.position = "none")
shape_centroids = st_centroid(shape)
shape_ymin = st_bbox(shape$geometry)[[2]]
shape_ymax = st_bbox(shape$geometry)[[4]]
shape.x.y = data.frame(x=map_dbl(shape_centroids$geometry, 1), y=map_dbl(shape_centroids$geometry, 2), shape$cell_type)
dist_pl = dist_pl+
annotate("text", label="GSC", x=shape.x.y[1,1], y=shape_ymin-0.30, size=text_scale)+
annotate("text", label="CB", x=shape.x.y[3,1], y=shape_ymax+0.16, size=text_scale)+
annotate("text", label="2-CC", x=shape.x.y[4,1], y=shape_ymin-0.30, size=text_scale)+
annotate("text", label="4-CC", x=shape.x.y[5,1], y=shape_ymax+0.16, size=text_scale)+
annotate("text", label="8-CC", x=shape.x.y[6,1], y=shape_ymin-0.30, size=text_scale)+
annotate("text", label="16-CC", x=(bounding_16CC[1]+bounding_16CC[3])/2, y=shape_ymin-0.30, size=text_scale)+
annotate("text", label="Stage 2\nEgg Chamber", x=shape.x.y[12,1], y=shape_ymin-0.40, size=text_scale)+
annotate("text", label="Region 1", x=(bounding_region_1[1]+bounding_region_1[3])/2, y=shape_ymax+0.5, size=text_scale)+
annotate("text", label="Region 2a", x=(bounding_region_2a[1]+bounding_region_2a[3])/2, y=shape_ymax+0.5, size=text_scale)+
annotate("text", label="Region 2b", x=(bounding_region_2b[1]+bounding_region_2b[3])/2, y=shape_ymax+0.5, size=text_scale)+
annotate("text", label="Region 3", x=(bounding_region_3[1]+bounding_region_3[3])/2, y=shape_ymax+0.5, size=text_scale)+
# GSC
annotate("segment", x=shape.x.y[1,1], xend=shape.x.y[1,1],
y=st_bbox(shape$geometry[1])[[2]], yend=shape_ymin-0.17)+
# CB
annotate("segment", x=shape.x.y[3,1], xend=shape.x.y[3,1],
y=st_bbox(shape$geometry[3])[[4]], yend=shape_ymax+0.03)+
# 2CC
annotate("segment", x=shape.x.y[4,1], xend=shape.x.y[4,1],
y=st_bbox(shape$geometry[4])[[2]], yend=shape_ymin-0.17)+
# 4CC
annotate("segment", x=shape.x.y[5,1], xend=shape.x.y[5,1],
y=st_bbox(shape$geometry[5])[[4]], yend=shape_ymax+0.03)+
# 8CC
annotate("segment", x=shape.x.y[6,1], xend=shape.x.y[6,1],
y=st_bbox(shape$geometry[6])[[2]], yend=shape_ymin-0.17)+
# 16CC
annotate("segment", x=bounding_16CC[1], xend=bounding_16CC[3], y=shape_ymin-.17, yend=shape_ymin-0.17)+
# ST2
annotate("segment", x=shape.x.y[12,1], xend=shape.x.y[12,1],
y=st_bbox(shape$geometry[12])[[2]], yend=shape_ymin-0.17)+
# region 1
annotate("segment", x=bounding_region_1[1], xend=bounding_region_1[3], y=shape_ymax+0.30, yend=shape_ymax+0.30)+
# region 2a
annotate("segment", x=bounding_region_2a[1], xend=bounding_region_2a[3], y=shape_ymax+0.30, yend=shape_ymax+0.30)+
# region 2b
annotate("segment", x=bounding_region_2b[1], xend=bounding_region_2b[3], y=shape_ymax+0.30, yend=shape_ymax+0.30)+
# region 3
annotate("segment", x=bounding_region_3[1], xend=bounding_region_3[3], y=shape_ymax+0.30, yend=shape_ymax+0.30)
dist_pl_rmd <<- dist_pl
}
source("server_modules/ovary_map_cartoon.R")
Figure1_A1 =  ovary_map_cartoon(text_scale = 12/ggplot2::.pt)+
theme(aspect.ratio = .28,
plot.margin = margin(0.0, 0.0, 0.1, 0.0, unit = "in"))
Figure1_A1
Figure1_B1 =  eps_as_gg("../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps")
Figure1_C = eps_as_gg("../Paper/Figures/Figure_1/polysome_seq_diagram.svg")
setwd("ShinyExpresionMap")
library(ggplot2)
library(multipanelfigure)
library(pdftools)
library(extrafont)
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/eps_as_gg.R")
Figure1_B1 =  eps_as_gg("../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps")
Figure1_C = eps_as_gg("../Paper/Figures/Figure_1/polysome_seq_diagram.svg")
Figure1_D_paths = list.files(path = "../Paper/Figures/Figure_1/", pattern = "*heatmap.png", full.names = TRUE)
Figure1 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.0, rep(2.0694, 2), 2.0, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-9*(1.1837+0.025))/2, 0.1837, 1, rep(1.1837, 7), 1, 0.1837, (11-9*(1.1837+0.025))/2), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure1
Figure1 = Figure1 %>%
fill_panel(Figure1_A1, label = "A", label_just = "bottom", scaling = "none", panel_clip = "off", row = 3:4, column = 3:6, family = "Helvetica") %>%
fill_panel(Figure1_B1, label = "B", label_just = "bottom", scaling = "none", panel_clip = "off", row = 5:7, column = 3:6, family = "Helvetica") %>%
fill_panel(Figure1_C, label = "C", label_just = "bottom", scaling = "none", panel_clip = "off", row = 8:9, column = 3:5, family = "Helvetica")
Figure1
ggsave(filename = "Figure1.pdf", plot = Figure1, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
Figure1 = Figure1 %>%
fill_panel(Figure1_A1, label = "A", label_just = "bottom", scaling = "none", panel_clip = "off", row = 3:4, column = 3:6, family = "Helvetica")
ggsave(filename = "Figure1.pdf", plot = Figure1, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
Figure1_B1 =  eps_as_gg("../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps")
Figure1_B1 =  eps_as_gg("../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps")
source("../Paper/Helper_functions/eps_as_gg.R")
Figure1_B1 =  eps_as_gg("../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps")
Figure1_B1
source("../Paper/Helper_functions/eps_as_gg.R")
Figure1_B1 = eps_as_gg("../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps")
rm(paste0(path, ".xml"))
source("../Paper/Helper_functions/eps_as_gg.R")
setwd("ShinyExpresionMap")
library(ggplot2)
library(multipanelfigure)
library(pdftools)
library(extrafont)
Figure1_B1 = eps_as_gg("../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps")
eps_as_gg("../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps")
path = "../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps"
PostScriptTrace(path, charpath = FALSE)
my_shape = readPicture(paste0(path, ".xml"))
Sys.setenv(R_GSCMD = normalizePath("C:/Program Files/gs/gs9.54.0/bin/gswin64c.exe"))
library(grImport)
library(ggplot2)
library(cowplot)
library(extrafont)
PostScriptTrace(path, charpath = FALSE)
my_shape = readPicture(paste0(path, ".xml"))
PostScriptTrace(path, charpath = FALSE)
my_shape = readPicture(paste0(path, ".xml"))
eps_as_gg(path = "../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps")
eps_as_gg(path = "../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps")
eps_as_gg(path = "../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps")
eps_as_gg = function(path) {
PostScriptTrace(path, charpath = FALSE)
my_shape = readPicture(paste0(path, ".xml"))
rm(paste0(path, ".xml"))
image_gg = grImport::grid.picture(my_shape, gp=gpar(fontfamily="Helvetica"))
return(image_gg)
}
eps_as_gg(path = "../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps")
PostScriptTrace("../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps", charpath = FALSE)
my_shape = readPicture(paste0(path, ".xml"))
my_shape = readPicture(paste0("../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps", ".xml"))
PostScriptTrace("../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps", charpath = T)
my_shape = readPicture(paste0("../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps", ".xml"))
PostScriptTrace("../Paper/Figures/Figure_1/polysome_seq_diagram.eps", charpath = FALSE)
my_shape = readPicture("../Paper/Figures/Figure_1/polysome_seq_diagram.eps.xml")
setwd("ShinyExpresionMap")
library(ggplot2)
library(multipanelfigure)
library(pdftools)
library(extrafont)
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/eps_as_gg.R")
# font_import(paths = c("C:/Users/Elliot/AppData/Local/Microsoft/Windows/Fonts/"), prompt = F)
source("server_modules/ovary_map_cartoon.R")
Figure1_A1 =  ovary_map_cartoon(text_scale = 12/ggplot2::.pt)+
theme(aspect.ratio = .28,
plot.margin = margin(0.0, 0.0, 0.1, 0.0, unit = "in"))
Figure1_A1_gt <- ggplot_gtable(ggplot_build(Figure1_A1))
Figure1_A1_gt$layout$clip[Figure1_A1_gt$layout$name == "panel"] <- "off"
Figure1_A1 = grid::grid.draw(Figure1_A1_gt)
Figure1_B1 = eps_as_gg("../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps")
Figure1_C = eps_as_gg("../Paper/Figures/Figure_1/polysome_seq_diagram.eps")
Figure1 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.0, rep(2.0694, 2), 2.0, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2, 1.1837, rep(1.1837, 6), 1.1837, (11-8*(1.1837+0.025))/2), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure1
Figure1 = Figure1 %>%
fill_panel(Figure1_A1, label = "A", label_just = "bottom", scaling = "none", panel_clip = "off", row = 2:3, column = 3:6, family = "Helvetica") %>%
fill_panel(Figure1_B1, label = "B", label_just = "bottom", scaling = "none", panel_clip = "off", row = 4:6, column = 3:6, family = "Helvetica") %>%
fill_panel(Figure1_C, label = "C", label_just = "bottom", scaling = "none", panel_clip = "off", row = 7:8, column = 3:5, family = "Helvetica")
Figure1
ggsave(filename = "Figure1.pdf", plot = Figure1, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
Figure1_A1
Figure1_A1_gt
grid::grid.draw(Figure1_A1_gt)
Figure1_A1 = as_grob(Figure1_A1_gt)
Figure1_A1
Figure1_A1
Figure1_A1 = ggplot_build(Figure1_A1_gt)
Figure1_A1 = ggplot_gtable(Figure1_A1_gt)
Figure1_A1 = grid.draw(Figure1_A1_gt)
Figure1_A1
grid.draw(Figure1_A1_gt)
bounding_16CC
setwd("ShinyExpresionMap")
library(ggplot2)
library(multipanelfigure)
library(pdftools)
library(extrafont)
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/eps_as_gg.R")
# font_import(paths = c("C:/Users/Elliot/AppData/Local/Microsoft/Windows/Fonts/"), prompt = F)
source("server_modules/ovary_map_cartoon.R")
Figure1_A1 =  ovary_map_cartoon(text_scale = 12/ggplot2::.pt)+
theme(aspect.ratio = .28,
plot.margin = margin(0.0, 0.0, 0.1, 0.0, unit = "in"))
Figure1_A1_gt <- ggplot_gtable(ggplot_build(Figure1_A1))
Figure1_A1_gt$layout$clip[Figure1_A1_gt$layout$name == "panel"] <- "off"
Figure1_A1 = grid.draw(Figure1_A1_gt)
Figure1_B1 = eps_as_gg("../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps")
Figure1_C = eps_as_gg("../Paper/Figures/Figure_1/polysome_seq_diagram.eps")
# Figure1_D_paths = list.files(path = "../Paper/Figures/Figure_1/", pattern = "*heatmap.png", full.names = TRUE)
# Figure1_D = lapply(Figure1_D_paths, png_as_gg)
Figure1 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.0, rep(2.0694, 2), 2.0, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2, 1.1837, rep(1.1837, 6), 1.1837, (11-8*(1.1837+0.025))/2), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure1
Figure1 = Figure1 %>%
fill_panel(Figure1_A1, label = "A", label_just = "bottom", scaling = "none", panel_clip = "off", row = 2:3, column = 3:6, family = "Helvetica") %>%
fill_panel(Figure1_B1, label = "B", label_just = "bottom", scaling = "none", panel_clip = "off", row = 4:6, column = 3:6, family = "Helvetica") %>%
fill_panel(Figure1_C, label = "C", label_just = "bottom", scaling = "none", panel_clip = "off", row = 7:8, column = 3:5, family = "Helvetica")
# fill_panel(Figure1_D[[1]], label = "D", label_just = "bottom", scaling = "none", panel_clip = "off", row = 9:10, column = 3:4, family = "Helvetica") %>%
# fill_panel(Figure1_D[[2]], label = "D'", label_just = "bottom", scaling = "none", panel_clip = "off", row = 9:10, column = 5:6, family = "Helvetica") %>%
# fill_panel(Figure1_D[[3]], label = "E", label_just = "bottom", scaling = "none", panel_clip = "off", row = 11:12, column = 3:4, family = "Helvetica") %>%
# fill_panel(Figure1_D[[4]], label = "E'", label_just = "bottom", scaling = "none", panel_clip = "off", row = 11:12, column = 5:6, family = "Helvetica")
Figure1
ggsave(filename = "Figure1.pdf", plot = Figure1, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
setwd("ShinyExpresionMap")
library(ggplot2)
library(multipanelfigure)
library(pdftools)
library(extrafont)
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/eps_as_gg.R")
# font_import(paths = c("C:/Users/Elliot/AppData/Local/Microsoft/Windows/Fonts/"), prompt = F)
source("server_modules/ovary_map_cartoon.R")
Figure1_A1 =  ovary_map_cartoon(text_scale = 12/ggplot2::.pt)+
theme(aspect.ratio = .28,
plot.margin = margin(0.0, 0.0, 0.1, 0.0, unit = "in"))
Figure1_B1 = eps_as_gg("../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps")
Figure1_C = eps_as_gg("../Paper/Figures/Figure_1/polysome_seq_diagram.eps")
# Figure1_D_paths = list.files(path = "../Paper/Figures/Figure_1/", pattern = "*heatmap.png", full.names = TRUE)
# Figure1_D = lapply(Figure1_D_paths, png_as_gg)
Figure1 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.0, rep(2.0694, 2), 2.0, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2, 1.1837, rep(1.1837, 6), 1.1837, (11-8*(1.1837+0.025))/2), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure1
Figure1 = Figure1 %>%
fill_panel(Figure1_A1, label = "A", label_just = "bottom", scaling = "none", panel_clip = "off", row = 2:3, column = 3:6, family = "Helvetica") %>%
fill_panel(Figure1_B1, label = "B", label_just = "bottom", scaling = "none", panel_clip = "off", row = 4:6, column = 3:6, family = "Helvetica") %>%
fill_panel(Figure1_C, label = "C", label_just = "bottom", scaling = "none", panel_clip = "off", row = 7:8, column = 3:5, family = "Helvetica")
# fill_panel(Figure1_D[[1]], label = "D", label_just = "bottom", scaling = "none", panel_clip = "off", row = 9:10, column = 3:4, family = "Helvetica") %>%
# fill_panel(Figure1_D[[2]], label = "D'", label_just = "bottom", scaling = "none", panel_clip = "off", row = 9:10, column = 5:6, family = "Helvetica") %>%
# fill_panel(Figure1_D[[3]], label = "E", label_just = "bottom", scaling = "none", panel_clip = "off", row = 11:12, column = 3:4, family = "Helvetica") %>%
# fill_panel(Figure1_D[[4]], label = "E'", label_just = "bottom", scaling = "none", panel_clip = "off", row = 11:12, column = 5:6, family = "Helvetica")
Figure1
ggsave(filename = "Figure1.pdf", plot = Figure1, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
setwd("ShinyExpresionMap")
library(ggplot2)
library(multipanelfigure)
library(pdftools)
library(extrafont)
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/eps_as_gg.R")
# font_import(paths = c("C:/Users/Elliot/AppData/Local/Microsoft/Windows/Fonts/"), prompt = F)
source("server_modules/ovary_map_cartoon.R")
Figure1_A1 =  ovary_map_cartoon(text_scale = 12/ggplot2::.pt)+
theme(aspect.ratio = .28,
plot.margin = margin(0.0, 0.0, 0.1, 0.0, unit = "in"))
Figure1_B1 = eps_as_gg("../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps")
Figure1_C = eps_as_gg("../Paper/Figures/Figure_1/polysome_seq_diagram.eps")
# Figure1_D_paths = list.files(path = "../Paper/Figures/Figure_1/", pattern = "*heatmap.png", full.names = TRUE)
# Figure1_D = lapply(Figure1_D_paths, png_as_gg)
Figure1 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.0, rep(2.0694, 2), 2.0, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2, 1.1837, rep(1.1837, 6), 1.1837, (11-8*(1.1837+0.025))/2), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure1
Figure1 = Figure1 %>%
fill_panel(Figure1_A1, label = "A", label_just = "bottom", scaling = "none", panel_clip = "off", row = 2:3, column = 3:6, family = "Helvetica") %>%
fill_panel(Figure1_B1, label = "B", label_just = "bottom", scaling = "none", panel_clip = "off", row = 4:6, column = 3:6, family = "Helvetica") %>%
fill_panel(Figure1_C, label = "C", label_just = "bottom", scaling = "none", panel_clip = "off", row = 7:8, column = 3:5, family = "Helvetica")
# fill_panel(Figure1_D[[1]], label = "D", label_just = "bottom", scaling = "none", panel_clip = "off", row = 9:10, column = 3:4, family = "Helvetica") %>%
# fill_panel(Figure1_D[[2]], label = "D'", label_just = "bottom", scaling = "none", panel_clip = "off", row = 9:10, column = 5:6, family = "Helvetica") %>%
# fill_panel(Figure1_D[[3]], label = "E", label_just = "bottom", scaling = "none", panel_clip = "off", row = 11:12, column = 3:4, family = "Helvetica") %>%
# fill_panel(Figure1_D[[4]], label = "E'", label_just = "bottom", scaling = "none", panel_clip = "off", row = 11:12, column = 5:6, family = "Helvetica")
Figure1
ggsave(filename = "Figure1.pdf", plot = Figure1, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
setwd("ShinyExpresionMap")
library(ggplot2)
library(multipanelfigure)
library(pdftools)
library(extrafont)
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/eps_as_gg.R")
# font_import(paths = c("C:/Users/Elliot/AppData/Local/Microsoft/Windows/Fonts/"), prompt = F)
source("server_modules/ovary_map_cartoon.R")
Figure1_A1 =  ovary_map_cartoon(text_scale = 12/ggplot2::.pt)+
theme(aspect.ratio = .28,
plot.margin = margin(0.0, 0.0, 0.1, 0.0, unit = "in"))
Figure1_B1 = eps_as_gg("../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps")
Figure1_C = eps_as_gg("../Paper/Figures/Figure_1/polysome_seq_diagram.eps")
# Figure1_D_paths = list.files(path = "../Paper/Figures/Figure_1/", pattern = "*heatmap.png", full.names = TRUE)
# Figure1_D = lapply(Figure1_D_paths, png_as_gg)
Figure1 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.0, rep(2.0694, 2), 2.0, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2, 1.1837, rep(1.1837, 6), 1.1837, (11-8*(1.1837+0.025))/2), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure1
Figure1 = Figure1 %>%
fill_panel(Figure1_A1, label = "A", label_just = "bottom", scaling = "none", panel_clip = "off", row = 2:3, column = 3:6, family = "Helvetica") %>%
fill_panel(Figure1_B1, label = "B", label_just = "bottom", scaling = "none", panel_clip = "off", row = 4:6, column = 3:6, family = "Helvetica") %>%
fill_panel(Figure1_C, label = "C", label_just = "bottom", scaling = "none", panel_clip = "off", row = 7:8, column = 3:5, family = "Helvetica")
# fill_panel(Figure1_D[[1]], label = "D", label_just = "bottom", scaling = "none", panel_clip = "off", row = 9:10, column = 3:4, family = "Helvetica") %>%
# fill_panel(Figure1_D[[2]], label = "D'", label_just = "bottom", scaling = "none", panel_clip = "off", row = 9:10, column = 5:6, family = "Helvetica") %>%
# fill_panel(Figure1_D[[3]], label = "E", label_just = "bottom", scaling = "none", panel_clip = "off", row = 11:12, column = 3:4, family = "Helvetica") %>%
# fill_panel(Figure1_D[[4]], label = "E'", label_just = "bottom", scaling = "none", panel_clip = "off", row = 11:12, column = 5:6, family = "Helvetica")
Figure1
ggsave(filename = "Figure1.pdf", plot = Figure1, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
c((11-8*(1.1837+0.025))/2, 1.1837, rep(1.1837, 6), 1.1837, (11-8*(1.1837+0.025))/2)
1.1837+3
1.1837+.3
setwd("ShinyExpresionMap")
library(ggplot2)
library(multipanelfigure)
library(pdftools)
library(extrafont)
source("../Paper/Helper_functions/image_panel.R")
source("../Paper/Helper_functions/eps_as_gg.R")
# font_import(paths = c("C:/Users/Elliot/AppData/Local/Microsoft/Windows/Fonts/"), prompt = F)
source("server_modules/ovary_map_cartoon.R")
Figure1_A1 =  ovary_map_cartoon(text_scale = 12/ggplot2::.pt)+
theme(aspect.ratio = .28,
plot.margin = margin(0.0, 0.0, 0.1, 0.0, unit = "in"))
Figure1_B1 = eps_as_gg("../Paper/Figures/Figure_1/Genetic_enrichment_cartoons.eps")
Figure1_C = eps_as_gg("../Paper/Figures/Figure_1/polysome_seq_diagram.eps")
# Figure1_D_paths = list.files(path = "../Paper/Figures/Figure_1/", pattern = "*heatmap.png", full.names = TRUE)
# Figure1_D = lapply(Figure1_D_paths, png_as_gg)
Figure1 = multi_panel_figure(
width = c((8.5-4*(2.0694+0.025))/2, 0.0694, 2.0, rep(2.0694, 2), 2.0, 0.0694, (8.5-4*(2.0694+0.025))/2),
height = c((11-8*(1.1837+0.025))/2-.3, 1.4837, rep(1.1837, 6), 1.4837, (11-8*(1.1837+0.025))/2-.3), row_spacing = 0.025, column_spacing = 0, unit = "in",
panel_label_type = "none", figure_name = "RpS19b_control_grouped")
Figure1
Figure1 = Figure1 %>%
fill_panel(Figure1_A1, label = "A", label_just = "bottom", scaling = "none", panel_clip = "off", row = 2:3, column = 3:6, family = "Helvetica") %>%
fill_panel(Figure1_B1, label = "B", label_just = "bottom", scaling = "none", panel_clip = "off", row = 4:6, column = 3:6, family = "Helvetica") %>%
fill_panel(Figure1_C, label = "C", label_just = "bottom", scaling = "none", panel_clip = "off", row = 7:8, column = 3:5, family = "Helvetica")
# fill_panel(Figure1_D[[1]], label = "D", label_just = "bottom", scaling = "none", panel_clip = "off", row = 9:10, column = 3:4, family = "Helvetica") %>%
# fill_panel(Figure1_D[[2]], label = "D'", label_just = "bottom", scaling = "none", panel_clip = "off", row = 9:10, column = 5:6, family = "Helvetica") %>%
# fill_panel(Figure1_D[[3]], label = "E", label_just = "bottom", scaling = "none", panel_clip = "off", row = 11:12, column = 3:4, family = "Helvetica") %>%
# fill_panel(Figure1_D[[4]], label = "E'", label_just = "bottom", scaling = "none", panel_clip = "off", row = 11:12, column = 5:6, family = "Helvetica")
Figure1
ggsave(filename = "Figure1.pdf", plot = Figure1, path = "../Paper/Figures/", width = 8.5, height = 11, device = cairo_pdf)
source("Preprocessing_scripts/heat_map_precomputation.R")
setwd("E:/Documents/Developmental-Landscape/ShinyExpresionMap")
source("Preprocessing_scripts/heat_map_precomputation.R")
source("Preprocessing_scripts/heat_map_precomputation.R")
setwd("../")
getwd()
source("ShinyExpresionMap/Preprocessing_scripts/heat_map_precomputation.R")
source("ShinyExpresionMap/Preprocessing_scripts/heat_map_precomputation.R")
source("ShinyExpresionMap/Preprocessing_scripts/heat_map_precomputation.R")
data_sets = c("Input_seq", "Polysome_seq", "Single_cell_seq_germline", "Single_cell_seq_soma")
Figure1_D_list = lapply(data_sets, DE_heatmap, write_to_rds = FALSE)
source("ShinyExpresionMap/Preprocessing_scripts/heat_map_precomputation.R")
data_sets = c("Input_seq", "Polysome_seq", "Single_cell_seq_germline", "Single_cell_seq_soma")
Figure1_D_list = lapply(data_sets, DE_heatmap, write_to_rds = FALSE)
Sys.setenv(R_GSCMD = normalizePath("C:/Users/Elliot/AppData/Local/Programs/orca/"))
OrchardSprays
orca()
